{"version":3,"file":"component---src-pages-notes-index-jsx-ea25851e7d073c3fef15.js","mappings":"qRAgBMA,GAAgBC,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BA6EnC,UAzEA,SAA0BC,GAAsB,IAAnBC,EAAQD,EAARC,SACZC,EAD0BF,EAAJG,KACPC,kBAAtBC,MACRC,EAAwBC,EAAAA,SAAe,GAAhCC,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAgBpB,OAdAC,EAAAA,WAAgB,WACd,IAAMG,EAAYC,EAAAA,MAASV,EAASW,OAAQ,CAC1CC,mBAAmB,IAClBL,KAEDE,IACCI,MAAMC,SAASL,EAAW,MAC3BA,EAAY,GACZA,GAAaM,KAAKC,KAAKf,EAAMgB,OAASC,EAAAA,IAEtCV,EAAQM,SAASL,EAAW,IAEhC,GAAG,CAACT,EAASW,OAAQV,EAAMgB,SAGzBX,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACa,EAAAA,EAAM,KACLb,EAAAA,cAAA,aAAO,iCACPA,EAAAA,cAAA,QAAMc,KAAK,cAAcC,QAAQ,mBAEnCf,EAAAA,cAACgB,EAAAA,EAAS,CAACC,SAAS,MAClBjB,EAAAA,cAACkB,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,SAGtCpB,EAAAA,cAAA,WACGL,EAAMgB,OAAS,EACdX,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACX,EAAa,MACXgC,EAAAA,EAAAA,GAAQ1B,EAAOM,EAAMW,EAAAA,GAAYU,KAAI,SAACC,EAAGC,GACxC,IAAAC,EAAwCF,EAAEG,KAAlCC,EAAEF,EAAFE,GAAIC,EAAIH,EAAJG,KAAmBC,EAAIJ,EAAjBK,YAClB,OACE9B,EAAAA,cAAC+B,EAAAA,EAAY,CACXC,IAAQR,EAAC,IAAIG,EACbM,MAAOJ,EAAKI,MACZC,YAAaL,EAAKK,YAClBC,KAAMN,EAAKM,KACXC,KAAMP,EAAKO,KACXtB,KAAMe,EAAKQ,KAAKC,MAAM,eAAe,GACrCV,KAAMA,GAGZ,KAEF5B,EAAAA,cAACuC,EAAAA,EAAc,CACbC,KAAMvC,EACNwC,OAAQ,kBACNxC,EAAO,IACPyC,EAAAA,EAAAA,UAAYhD,EAASiD,SAAQ,SAASlC,KAAKmC,IAAI3C,EAAO,EAAG,GAAK,EAEhE4C,OAAQ,kBACN5C,EAAOQ,KAAKC,KAAKf,EAAMgB,OAASC,EAAAA,KAChC8B,EAAAA,EAAAA,UACKhD,EAASiD,SAAQ,SAASlC,KAAKqC,IAChC7C,EAAO,EACPQ,KAAKC,KAAKf,EAAMgB,OAASC,EAAAA,IAE5B,KAKPZ,EAAAA,cAACkB,EAAAA,EAAU,KAAC,uCAMxB,C","sources":["webpack://dustbringer.github.io/./src/pages/notes/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link, navigate, graphql } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport moment from \"moment\";\r\nimport qs from \"query-string\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport BlogListCard from \"../../components/BlogListCard\";\r\nimport PageNavigation from \"../../components/PageNavigation\";\r\n\r\nimport { N_PER_PAGE, getPage } from \"../../util/pagination\";\r\n\r\nconst ListContainer = styled(\"div\")`\r\n  min-height: 75vh;\r\n`;\r\n\r\nfunction ReferenceListPage({ location, data }) {\r\n  const { edges: notes } = data.allMarkdownRemark;\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    const queryPage = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    }).page;\r\n    if (\r\n      queryPage &&\r\n      !isNaN(parseInt(queryPage, 10)) &&\r\n      queryPage > 0 &&\r\n      queryPage <= Math.ceil(notes.length / N_PER_PAGE)\r\n    ) {\r\n      setPage(parseInt(queryPage, 10));\r\n    }\r\n  }, [location.search, notes.length]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Notes - dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"List of Notes\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Notes\r\n        </Typography>\r\n        <div>\r\n          {notes.length > 0 ? (\r\n            <>\r\n              <ListContainer>\r\n                {getPage(notes, page, N_PER_PAGE).map((e, i) => {\r\n                  const { id, path, frontmatter: meta } = e.node;\r\n                  return (\r\n                    <BlogListCard\r\n                      key={`${i}-${id}`}\r\n                      title={meta.title}\r\n                      description={meta.description}\r\n                      date={meta.date}\r\n                      tags={meta.tags}\r\n                      name={meta.slug.match(/^.*\\/(.+?)$/)[1]}\r\n                      path={path}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListContainer>\r\n              <PageNavigation\r\n                text={page}\r\n                onPrev={() =>\r\n                  page > 1 &&\r\n                  navigate(`${location.pathname}?page=${Math.max(page - 1, 1)}`)\r\n                }\r\n                onNext={() =>\r\n                  page < Math.ceil(notes.length / N_PER_PAGE) &&\r\n                  navigate(\r\n                    `${location.pathname}?page=${Math.min(\r\n                      page + 1,\r\n                      Math.ceil(notes.length / N_PER_PAGE)\r\n                    )}`\r\n                  )\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <Typography>There seems to be nothing here...</Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ReferenceListPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query GetNotes {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { slug: { regex: \"/^/?notes//\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            slug\r\n            title\r\n            description\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            tags\r\n          }\r\n          path: gatsbyPath(filePath: \"/{MarkdownRemark.frontmatter__slug}\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["ListContainer","styled","_templateObject","_taggedTemplateLiteralLoose","_ref","location","notes","data","allMarkdownRemark","edges","_React$useState","React","page","setPage","queryPage","qs","search","ignoreQueryPrefix","isNaN","parseInt","Math","ceil","length","N_PER_PAGE","Helmet","name","content","Container","maxWidth","Typography","variant","gutterBottom","getPage","map","e","i","_e$node","node","id","path","meta","frontmatter","BlogListCard","key","title","description","date","tags","slug","match","PageNavigation","text","onPrev","navigate","pathname","max","onNext","min"],"sourceRoot":""}