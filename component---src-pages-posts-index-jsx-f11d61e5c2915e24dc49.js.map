{"version":3,"file":"component---src-pages-posts-index-jsx-f11d61e5c2915e24dc49.js","mappings":"wQAmBMA,EAAgBC,EAAAA,QAAAA,IAAAA,WAAU,gEAAVA,CAAU,sBA+EhC,UA3EA,SAAsB,GAAqB,IAAnBC,EAAQ,EAARA,SACPC,EADqB,EAAJC,KACFC,kBAAtBC,MAGR,EAAwBC,EAAAA,SAAe,GAAhCC,EAAI,KAAEC,EAAO,KAgBpB,OAdAF,EAAAA,WAAgB,WACd,IAAMG,EAAYC,EAAAA,MAAST,EAASU,OAAQ,CAC1CC,mBAAmB,IAClBL,KAEDE,IACCI,MAAMC,SAASL,EAAW,MAC3BA,EAAY,GACZA,GAAaM,KAAKC,KAAKd,EAAMe,OAASC,EAAAA,IAEtCV,EAAQM,SAASL,EAAW,IAEhC,GAAG,CAACR,EAASU,OAAQT,EAAMe,SAGzB,gCACE,gBAAC,IAAM,KACL,8DACA,wBAAME,KAAK,cAAcC,QAAQ,wBAEnC,gBAAC,IAAS,CAACC,SAAS,MAClB,gBAAC,IAAU,CAACC,QAAQ,KAAKC,cAAY,YAGrC,2BACGrB,EAAMe,OAAS,EACd,gCACE,gBAAClB,EAAa,MACXyB,EAAAA,EAAAA,GAAQtB,EAAOK,EAAMW,EAAAA,GAAYO,KAAI,SAACC,EAAGC,GACxC,MAAwCD,EAAEE,KAAlCC,EAAE,EAAFA,GAAIC,EAAI,EAAJA,KAAmBC,EAAI,EAAjBC,YAClB,OACE,gBAAC,IAAY,CACXC,IAAQN,EAAC,IAAIE,EACbK,MAAOH,EAAKG,MACZC,YAAaJ,EAAKI,YAClBC,KAAML,EAAKK,KACXC,KAAMN,EAAKM,KACXlB,KAAMY,EAAKO,KAAKC,MAAM,eAAe,GACrCT,KAAMA,GAGZ,KAEF,gBAAC,IAAc,CACbU,KAAMjC,EACNkC,OAAQ,kBACNlC,EAAO,IACPmC,EAAAA,EAAAA,UAAYzC,EAAS0C,SAAQ,SAAS5B,KAAK6B,IAAIrC,EAAO,EAAG,GAAK,EAEhEsC,OAAQ,kBACNtC,EAAOQ,KAAKC,KAAKd,EAAMe,OAASC,EAAAA,KAChCwB,EAAAA,EAAAA,UACKzC,EAAS0C,SAAQ,SAAS5B,KAAK+B,IAChCvC,EAAO,EACPQ,KAAKC,KAAKd,EAAMe,OAASC,EAAAA,IAE5B,KAKP,gBAAC,IAAU,4CAMvB,C","sources":["webpack://dustbringer.github.io/./src/pages/posts/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link, navigate, graphql } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport qs from \"query-string\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport BlogListCard from \"../../components/BlogListCard\";\r\nimport PageNavigation from \"../../components/PageNavigation\";\r\n\r\nimport { N_PER_PAGE, getPage } from \"../../util/pagination\";\r\n\r\n// HELPFUL https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f\r\n// In gatsby: https://www.gatsbyjs.com/blog/2017-07-19-creating-a-blog-with-gatsby/\r\n\r\nconst ListContainer = styled.div`\r\n  min-height: 75vh;\r\n`;\r\n\r\nfunction BlogListPage({ location, data }) {\r\n  const { edges: posts } = data.allMarkdownRemark;\r\n  // const [posts, setPosts] = React.useState([]);\r\n  // const [loading, setLoading] = React.useState(true);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    const queryPage = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    }).page;\r\n    if (\r\n      queryPage &&\r\n      !isNaN(parseInt(queryPage, 10)) &&\r\n      queryPage > 0 &&\r\n      queryPage <= Math.ceil(posts.length / N_PER_PAGE)\r\n    ) {\r\n      setPage(parseInt(queryPage, 10));\r\n    }\r\n  }, [location.search, posts.length]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Posts - dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"List of blog posts\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Posts\r\n        </Typography>\r\n        <div>\r\n          {posts.length > 0 ? (\r\n            <>\r\n              <ListContainer>\r\n                {getPage(posts, page, N_PER_PAGE).map((e, i) => {\r\n                  const { id, path, frontmatter: meta } = e.node;\r\n                  return (\r\n                    <BlogListCard\r\n                      key={`${i}-${id}`}\r\n                      title={meta.title}\r\n                      description={meta.description}\r\n                      date={meta.date}\r\n                      tags={meta.tags}\r\n                      name={meta.slug.match(/^.*\\/(.+?)$/)[1]}\r\n                      path={path}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListContainer>\r\n              <PageNavigation\r\n                text={page}\r\n                onPrev={() =>\r\n                  page > 1 &&\r\n                  navigate(`${location.pathname}?page=${Math.max(page - 1, 1)}`)\r\n                }\r\n                onNext={() =>\r\n                  page < Math.ceil(posts.length / N_PER_PAGE) &&\r\n                  navigate(\r\n                    `${location.pathname}?page=${Math.min(\r\n                      page + 1,\r\n                      Math.ceil(posts.length / N_PER_PAGE)\r\n                    )}`\r\n                  )\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <Typography>There seems to be nothing here...</Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogListPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query GetPosts {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date] }\r\n      filter: { frontmatter: { slug: { regex: \"/^/?posts//\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          frontmatter {\r\n            slug\r\n            title\r\n            description\r\n            date(formatString: \"DD MMMM, YYYY\")\r\n            tags\r\n          }\r\n          path: gatsbyPath(filePath: \"/{MarkdownRemark.frontmatter__slug}\")\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["ListContainer","styled","location","posts","data","allMarkdownRemark","edges","React","page","setPage","queryPage","qs","search","ignoreQueryPrefix","isNaN","parseInt","Math","ceil","length","N_PER_PAGE","name","content","maxWidth","variant","gutterBottom","getPage","map","e","i","node","id","path","meta","frontmatter","key","title","description","date","tags","slug","match","text","onPrev","navigate","pathname","max","onNext","min"],"sourceRoot":""}