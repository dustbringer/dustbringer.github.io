{"version":3,"file":"component---src-pages-posts-index-tsx-134a79035786692d9e07.js","mappings":"+RAqBA,MAAMA,GAAgBC,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+BA2EnC,UAvEA,SAAqBC,GAGwB,IAHvB,SACpBC,EAAQ,KACRC,GACyCF,EACzC,MAAQG,MAAOC,GAAUF,EAAKG,mBAGvBC,EAAMC,GAAWC,EAAAA,SAAe,GAavC,OAXAA,EAAAA,WAAgB,KACd,MAAMC,EAAYC,SAASC,EAAAA,MAASV,EAASW,QAAQN,KAAgB,KAElEO,MAAMJ,IACPA,EAAY,GACZA,GAAaK,KAAKC,KAAKX,EAAMY,OAASC,EAAAA,IAEtCV,EAAQE,EACV,GACC,CAACR,EAASW,OAAQR,EAAMY,SAGzBR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACU,EAAAA,EAAS,CAACC,SAAS,MAClBX,EAAAA,cAACY,EAAAA,EAAU,CAACC,QAAQ,KAAKC,cAAY,GAAC,SAGtCd,EAAAA,cAAA,WACGJ,EAAMY,OAAS,EACdR,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACZ,EAAa,MACX2B,EAAAA,EAAAA,GAAQnB,EAAOE,EAAMW,EAAAA,GAAYO,KAAI,CAACC,EAAMC,KAAM,IAAAC,EACjD,MAAM,GAAEC,EAAE,KAAEC,EAAMC,YAAaC,GAASN,EACxC,OACEjB,EAAAA,cAACwB,EAAAA,EAAiB,CAChBC,IAAQP,EAAC,IAAIE,EACbM,MAAOH,EAAKG,MACZC,YAAaJ,EAAKI,YAClBC,KAAML,EAAKM,OACXC,KAAMP,EAAKO,KACXC,KAAoC,QAAhCZ,EAAEI,EAAKS,KAAKC,MAAM,sBAAc,IAAAd,OAAA,EAA9BA,EAAiC,GACvCE,KAAMA,GACN,KAIRrB,EAAAA,cAACkC,EAAAA,EAAc,CACbC,KAAMC,OAAOtC,GACbuC,OAAQA,IACNvC,EAAO,IACPwC,EAAAA,EAAAA,UAAY7C,EAAS8C,SAAQ,SAASjC,KAAKkC,IAAI1C,EAAO,EAAG,IAE3D2C,OAAQA,IACN3C,EAAOQ,KAAKC,KAAKX,EAAMY,OAASC,EAAAA,KAChC6B,EAAAA,EAAAA,UACK7C,EAAS8C,SAAQ,SAASjC,KAAKoC,IAChC5C,EAAO,EACPQ,KAAKC,KAAKX,EAAMY,OAASC,EAAAA,QAOnCT,EAAAA,cAACY,EAAAA,EAAU,KAAC,uCAMxB,EA0BO,SAAS+B,IACd,OACE3C,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAO,iCACPA,EAAAA,cAAA,QAAM+B,KAAK,cAAca,QAAQ,uBAGvC,C","sources":["webpack://dustbringer.github.io/./src/pages/posts/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Link, navigate, graphql } from \"gatsby\";\r\nimport type { PageProps } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport moment from \"moment\";\r\nimport qs from \"query-string\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport BlogListCardSmall from \"../../components/BlogListCardSmall\";\r\nimport PageNavigation from \"../../components/PageNavigation\";\r\n\r\nimport type { PostType, DataTypeAllMarkdown } from \"../posts.d.ts\";\r\nimport { N_PER_PAGE, getPage } from \"../../util/pagination\";\r\n\r\n// HELPFUL https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f\r\n// In gatsby: https://www.gatsbyjs.com/blog/2017-07-19-creating-a-blog-with-gatsby/\r\n\r\nconst ListContainer = styled(\"div\")`\r\n  min-height: 75vh;\r\n`;\r\n\r\nfunction BlogListPage({\r\n  location,\r\n  data,\r\n}: PageProps<DataTypeAllMarkdown<PostType>>) {\r\n  const { nodes: posts } = data.allMarkdownRemark;\r\n  // const [posts, setPosts] = React.useState([]);\r\n  // const [loading, setLoading] = React.useState(true);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    const queryPage = parseInt(qs.parse(location.search).page as string, 10);\r\n    if (\r\n      !isNaN(queryPage) &&\r\n      queryPage > 0 &&\r\n      queryPage <= Math.ceil(posts.length / N_PER_PAGE)\r\n    ) {\r\n      setPage(queryPage);\r\n    }\r\n  }, [location.search, posts.length]);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Posts\r\n        </Typography>\r\n        <div>\r\n          {posts.length > 0 ? (\r\n            <>\r\n              <ListContainer>\r\n                {getPage(posts, page, N_PER_PAGE).map((post, i) => {\r\n                  const { id, path, frontmatter: meta } = post;\r\n                  return (\r\n                    <BlogListCardSmall\r\n                      key={`${i}-${id}`}\r\n                      title={meta.title}\r\n                      description={meta.description}\r\n                      date={meta.edited} // or meta.date\r\n                      tags={meta.tags}\r\n                      name={meta.slug.match(/^.*\\/(.+?)$/)?.[1]}\r\n                      path={path}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListContainer>\r\n              <PageNavigation\r\n                text={String(page)}\r\n                onPrev={() =>\r\n                  page > 1 &&\r\n                  navigate(`${location.pathname}?page=${Math.max(page - 1, 1)}`)\r\n                }\r\n                onNext={() =>\r\n                  page < Math.ceil(posts.length / N_PER_PAGE) &&\r\n                  navigate(\r\n                    `${location.pathname}?page=${Math.min(\r\n                      page + 1,\r\n                      Math.ceil(posts.length / N_PER_PAGE)\r\n                    )}`\r\n                  )\r\n                }\r\n              />\r\n            </>\r\n          ) : (\r\n            <Typography>There seems to be nothing here...</Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogListPage;\r\n\r\nexport const pageQuery = graphql`\r\n  query GetPosts {\r\n    allMarkdownRemark(\r\n      sort: { frontmatter: { date: DESC } }\r\n      filter: { frontmatter: { slug: { regex: \"/^/?posts//\" } } }\r\n    ) {\r\n      nodes {\r\n        id\r\n        frontmatter {\r\n          slug\r\n          title\r\n          description\r\n          date(formatString: \"DD MMMM, YYYY\")\r\n          edited(formatString: \"DD MMMM, YYYY\")\r\n          tags\r\n        }\r\n        path: gatsbyPath(filePath: \"/{MarkdownRemark.frontmatter__slug}\")\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport function Head() {\r\n  return (\r\n    <>\r\n      <title>Posts | dustbringer.github.io</title>\r\n      <meta name=\"description\" content=\"List of blog posts\" />\r\n    </>\r\n  );\r\n}\r\n"],"names":["ListContainer","styled","_templateObject","_taggedTemplateLiteralLoose","_ref","location","data","nodes","posts","allMarkdownRemark","page","setPage","React","queryPage","parseInt","qs","search","isNaN","Math","ceil","length","N_PER_PAGE","Container","maxWidth","Typography","variant","gutterBottom","getPage","map","post","i","_meta$slug$match","id","path","frontmatter","meta","BlogListCardSmall","key","title","description","date","edited","tags","name","slug","match","PageNavigation","text","String","onPrev","navigate","pathname","max","onNext","min","Head","content"],"sourceRoot":""}