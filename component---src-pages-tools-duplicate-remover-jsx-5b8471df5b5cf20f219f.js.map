{"version":3,"file":"component---src-pages-tools-duplicate-remover-jsx-5b8471df5b5cf20f219f.js","mappings":"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","sources":["webpack://dustbringer.github.io/./node_modules/@mui/icons-material/DirectionsRun.js","webpack://dustbringer.github.io/./src/components/Container.jsx","webpack://dustbringer.github.io/./src/components/Link.jsx","webpack://dustbringer.github.io/./node_modules/@mui/material/FormGroup/formGroupClasses.js","webpack://dustbringer.github.io/./node_modules/@mui/material/FormGroup/FormGroup.js","webpack://dustbringer.github.io/./src/pages/tools/duplicate-remover.jsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _jsxRuntime = require(\"react/jsx-runtime\");\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9 1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"\n}), 'DirectionsRun');\n\nexports.default = _default;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport MUIContainer from \"@mui/material/Container\";\r\n\r\nconst Container = styled(MUIContainer)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nexport default Container;","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport MUILink from \"@mui/material/Link\";\r\n\r\nconst StyledMUILink = styled(MUILink)({\r\n  fontWeight: \"600\",\r\n  color: \"#2f3241\",\r\n  textDecoration: \"none\",\r\n  \"&:hover\": {\r\n    textDecoration: \"underline\",\r\n  },\r\n});\r\n\r\nfunction Link(props) {\r\n  return (\r\n    <StyledMUILink\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      {...props}\r\n    ></StyledMUILink>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nvar formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar useUtilityClasses = function useUtilityClasses(ownerState) {\n  var classes = ownerState.classes,\n      row = ownerState.row,\n      error = ownerState.error;\n  var slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\n\nvar FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: function overridesResolver(props, styles) {\n    var ownerState = props.ownerState;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(function (_ref) {\n  var ownerState = _ref.ownerState;\n  return _extends({\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  }, ownerState.row && {\n    flexDirection: 'row'\n  });\n});\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  var props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n\n  var className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var muiFormControl = useFormControl();\n  var fcs = formControlState({\n    props: props,\n    muiFormControl: muiFormControl,\n    states: ['error']\n  });\n\n  var ownerState = _extends({}, props, {\n    row: row,\n    error: fcs.error\n  });\n\n  var classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default FormGroup;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\n// import TextField from \"@mui/material/TextField\";\r\nimport TextField from \"../../components/TextFieldPaddingFixed\";\r\nimport DirectionsRunIcon from \"@mui/icons-material/DirectionsRun\";\r\nimport FormGroup from \"@mui/material/FormGroup\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport FormLabel from \"@mui/material/FormLabel\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport ToggleButton from \"@mui/material/ToggleButton\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport Link from \"../../components/Link\";\r\n\r\nconst SmallText = styled(Typography)`\r\n  font-size: 0.8em;\r\n  color: #aaaaaa;\r\n`;\r\n\r\n// Edited from https://stackoverflow.com/a/61599269\r\nconst remDupe = (arr, caseInsensitive) => {\r\n  const temp = [];\r\n  return [\r\n    ...new Set(\r\n      !caseInsensitive\r\n        ? arr\r\n        : arr.filter((x) => {\r\n            const _x = typeof x === \"string\" ? x.toLowerCase() : x;\r\n            if (!temp.includes(_x)) {\r\n              temp.push(_x);\r\n              return true;\r\n            }\r\n            return false;\r\n          })\r\n    ),\r\n  ];\r\n};\r\n\r\n// Arguments: text list, options\r\n// Return: array of parsed text with duplicates removed\r\nconst parseInput = (\r\n  text,\r\n  useCustomInSep = false,\r\n  customInSep = \"\",\r\n  caseIns = false,\r\n  ignoreEmpty = false,\r\n  keepTrailingWhitespace = false\r\n) => {\r\n  let temp = text;\r\n\r\n  if (keepTrailingWhitespace) {\r\n    // temp = temp.split(/,|\\r\\n|\\n|\\r/);\r\n    temp = temp.split(\r\n      new RegExp(useCustomInSep ? customInSep : /,|\\r\\n|\\n|\\r/)\r\n    );\r\n  } else {\r\n    // Strip whitespace off the ends of the input\r\n    temp = temp.replace(/^\\s+|\\s+$/g, \"\");\r\n\r\n    // Split the input into an array\r\n    // temp = temp.split(/\\s*,\\s*|\\s*\\n\\s*|\\s*\\r\\s*/);\r\n    temp = temp.split(\r\n      new RegExp(\r\n        useCustomInSep\r\n          ? String.raw`\\s*${customInSep}\\s*`\r\n          : /\\s*,\\s*|\\s*\\n\\s*|\\s*\\r\\s*/\r\n      )\r\n    );\r\n    // Note: Brackets in regex = keep the match in the resulting string\r\n    // Examples/Source: https://stackoverflow.com/questions/12001953/javascript-and-regex-split-string-and-keep-the-separator\r\n  }\r\n\r\n  // Remove duplicates\r\n  // Using sets: https://stackoverflow.com/questions/9229645/remove-duplicate-values-from-js-array\r\n  let result = remDupe(temp, caseIns, ignoreEmpty);\r\n  if (ignoreEmpty) result = result.filter((x) => x);\r\n\r\n  return { inputSize: temp.length, result: result };\r\n};\r\n\r\nfunction DuplicateRemoverPage() {\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [output, setOutput] = React.useState(\"\");\r\n\r\n  // Input Settings\r\n  const [useCustomInSep, setUseCustomInSep] = React.useState(false);\r\n  const [customInSep, setCustomInSep] = React.useState(\"\");\r\n  const [caseIns, setCaseIns] = React.useState(false);\r\n  const [ignoreEmpty, setIgnoreEmpty] = React.useState(false);\r\n  const [keepTrailingWhitespace, setKeepTrailingWhitespace] =\r\n    React.useState(false);\r\n\r\n  // Output Settings\r\n  const [useCustomOutSep, setUseCustomOutSep] = React.useState(false);\r\n  const [customOutSep, setCustomOutSep] = React.useState(\"\");\r\n  const [outputDisplay, setOutputDisplay] = React.useState(\"none\");\r\n  const [outputSort, setOutputSort] = React.useState(\"none\");\r\n\r\n  const handleOutputDisplayChange = (e, newDisplay) =>\r\n    newDisplay !== null && setOutputDisplay(newDisplay);\r\n  const handleOutputSortChange = (e, newSort) =>\r\n    newSort !== null && setOutputSort(newSort);\r\n\r\n  // Extra data\r\n  const [inputSize, setInputSize] = React.useState(0);\r\n  const [outputSize, setOutputSize] = React.useState(0);\r\n\r\n  const run = (e) => {\r\n    e.preventDefault();\r\n\r\n    const parsedInput = parseInput(\r\n      input,\r\n      useCustomInSep,\r\n      customInSep,\r\n      caseIns,\r\n      ignoreEmpty,\r\n      keepTrailingWhitespace\r\n    );\r\n    let outputList = parsedInput.result;\r\n\r\n    setInputSize(parsedInput.inputSize);\r\n    setOutputSize(outputList.length);\r\n\r\n    // Sort\r\n    if (outputSort === \"asc\") outputList = outputList.sort();\r\n    else if (outputSort === \"desc\") outputList = outputList.sort().reverse();\r\n\r\n    let output = outputList.join(useCustomOutSep ? customOutSep : \"\\n\");\r\n    // Lowercase\r\n    if (outputDisplay === \"uppercase\") output = output.toUpperCase();\r\n    else if (outputDisplay === \"lowercase\") output = output.toLowerCase();\r\n\r\n    setOutput(output);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Duplicate Remover - dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"Duplicate Remover\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\">Duplicate Remover</Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Enter a list of strings into the box either comma or new line\r\n          separated (default). Duplicate items in the list will be removed and\r\n          the cleaned list will be displayed below. Use at your own risk.\r\n          Inspired by <Link href=\"https://dedupelist.com/\">DeDupeList</Link>.\r\n        </Typography>\r\n\r\n        <TextField\r\n          label=\"Input\"\r\n          rows={6}\r\n          multiline\r\n          margin=\"dense\"\r\n          size=\"small\"\r\n          fullWidth\r\n          autoFocus\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            style: {\r\n              fontFamily: \"Roboto Mono\",\r\n            },\r\n          }}\r\n          sx={{ marginTop: \"8px\", marginBottom: \"8px\" }}\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n        />\r\n\r\n        <Box\r\n          component=\"form\"\r\n          onSubmit={run}\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            alignItems: \"stretch\",\r\n            \"@media (max-width: 600px)\": {\r\n              flexDirection: \"column\",\r\n            },\r\n          }}\r\n        >\r\n          <FormControl>\r\n            <FormLabel>Input Settings</FormLabel>\r\n            <FormGroup sx={{ margin: \"8px 11px\", marginLeft: \"0px\" }}>\r\n              <FormGroup\r\n                row\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"nowrap\",\r\n                }}\r\n              >\r\n                <Checkbox\r\n                  checked={useCustomInSep}\r\n                  onChange={(e) => setUseCustomInSep(e.target.checked)}\r\n                />\r\n                <TextField\r\n                  placeholder=\"Custom Separator (supports regex)\"\r\n                  value={customInSep}\r\n                  onChange={(e) => setCustomInSep(e.target.value)}\r\n                  disabled={!useCustomInSep}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup row sx={{ marginLeft: \"11px\" }}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={caseIns}\r\n                      onChange={(e) => setCaseIns(e.target.checked)}\r\n                    />\r\n                  }\r\n                  label=\"Case Insensitive\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={ignoreEmpty}\r\n                      onChange={(e) => setIgnoreEmpty(e.target.checked)}\r\n                    />\r\n                  }\r\n                  label=\"Ignore Empty Input\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={keepTrailingWhitespace}\r\n                      onChange={(e) =>\r\n                        setKeepTrailingWhitespace(e.target.checked)\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Keep Trailing Whitespace\"\r\n                />\r\n              </FormGroup>\r\n            </FormGroup>\r\n          </FormControl>\r\n\r\n          <FormControl>\r\n            <FormLabel>Output Settings</FormLabel>\r\n\r\n            <FormGroup sx={{ margin: \"8px 11px\", marginLeft: \"0px\" }}>\r\n              <FormGroup\r\n                row\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexWrap: \"nowrap\",\r\n                }}\r\n              >\r\n                <Checkbox\r\n                  checked={useCustomOutSep}\r\n                  onChange={(e) => setUseCustomOutSep(e.target.checked)}\r\n                />\r\n                <TextField\r\n                  placeholder=\"Custom Separator\"\r\n                  value={customOutSep}\r\n                  onChange={(e) => setCustomOutSep(e.target.value)}\r\n                  disabled={!useCustomOutSep}\r\n                  size=\"small\"\r\n                  fullWidth\r\n                />\r\n              </FormGroup>\r\n\r\n              <FormGroup row sx={{ marginLeft: \"11px\" }}>\r\n                <ToggleButtonGroup\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  exclusive\r\n                  fullWidth\r\n                  sx={{ mt: \"3px\" }}\r\n                  value={outputDisplay}\r\n                  onChange={handleOutputDisplayChange}\r\n                >\r\n                  <ToggleButton value=\"none\" disableRipple>\r\n                    First Match\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"uppercase\" disableRipple>\r\n                    Uppercase\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"lowercase\" disableRipple>\r\n                    Lowercase\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n\r\n                <ToggleButtonGroup\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  exclusive\r\n                  fullWidth\r\n                  sx={{ mt: \"3px\" }}\r\n                  value={outputSort}\r\n                  onChange={handleOutputSortChange}\r\n                >\r\n                  <ToggleButton value=\"none\" disableRipple>\r\n                    No Sort\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"asc\" disableRipple>\r\n                    Ascending\r\n                  </ToggleButton>\r\n                  <ToggleButton value=\"desc\" disableRipple>\r\n                    Descending\r\n                  </ToggleButton>\r\n                </ToggleButtonGroup>\r\n              </FormGroup>\r\n            </FormGroup>\r\n          </FormControl>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            disableRipple\r\n            sx={{ margin: \"8px\", marginRight: 0 }}\r\n            type=\"submit\"\r\n            title=\"Run\"\r\n          >\r\n            <DirectionsRunIcon />\r\n          </Button>\r\n        </Box>\r\n\r\n        <TextField\r\n          label=\"Output\"\r\n          rows={6}\r\n          multiline\r\n          margin=\"dense\"\r\n          size=\"small\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            style: {\r\n              fontFamily: \"Roboto Mono\",\r\n            },\r\n          }}\r\n          sx={{ marginTop: \"8px\", marginBottom: \"8px\" }}\r\n          value={output}\r\n          onFocus={(e) => e.target.select()}\r\n        />\r\n        {/* Count occurences? */}\r\n        {/* Sort by occurences? */}\r\n\r\n        <SmallText variant=\"body1\">\r\n          {inputSize} input, {outputSize} output, {inputSize - outputSize}{\" \"}\r\n          removed\r\n        </SmallText>\r\n        {/* Input count, output count, removed count */}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DuplicateRemoverPage;\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","Container","styled","MUIContainer","StyledMUILink","MUILink","fontWeight","color","textDecoration","props","target","rel","getFormGroupUtilityClass","slot","generateUtilityClass","_excluded","FormGroupRoot","name","overridesResolver","styles","ownerState","root","row","_ref","display","flexDirection","flexWrap","inProps","ref","useThemeProps","className","_props$row","other","muiFormControl","useFormControl","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","SmallText","Typography","parseInput","text","useCustomInSep","customInSep","caseIns","ignoreEmpty","keepTrailingWhitespace","temp","result","arr","caseInsensitive","Set","filter","x","_x","toLowerCase","includes","push","remDupe","split","RegExp","replace","String","raw","inputSize","length","React","input","setInput","output","setOutput","setUseCustomInSep","setCustomInSep","setCaseIns","setIgnoreEmpty","setKeepTrailingWhitespace","useCustomOutSep","setUseCustomOutSep","customOutSep","setCustomOutSep","outputDisplay","setOutputDisplay","outputSort","setOutputSort","setInputSize","outputSize","setOutputSize","Helmet","content","maxWidth","variant","gutterBottom","Link","href","label","rows","multiline","margin","size","fullWidth","autoFocus","inputProps","style","fontFamily","sx","marginTop","marginBottom","value","onChange","e","Box","component","onSubmit","preventDefault","parsedInput","outputList","sort","reverse","join","toUpperCase","alignItems","FormControl","FormLabel","marginLeft","Checkbox","checked","placeholder","disabled","FormControlLabel","control","ToggleButtonGroup","exclusive","mt","newDisplay","ToggleButton","disableRipple","newSort","Button","marginRight","type","title","DirectionsRun","onFocus","select"],"sourceRoot":""}