{"version":3,"file":"component---src-pages-tools-index-jsx-2824730d8ab8b0c2adbe.js","mappings":"iUAaMA,EAAS,CACbC,KAAM,CACJC,UAAW,OACXC,OAAQ,OACRC,gBAAiB,YAwCrB,MApCA,YAA6E,IAAxDC,EAAwD,EAAxDA,KAAwD,IAAlDC,KAAAA,OAAkD,MAA3C,GAA2C,EAAvCC,EAAuC,EAAvCA,MAAOC,EAAgC,EAAhCA,YAAgC,IAAnBC,KAAAA,OAAmB,MAAZ,GAAY,EAARC,EAAQ,EAARA,KACnE,OACE,gBAACC,EAAA,EAAD,CAAMC,GAAIZ,EAAOC,KAAMY,QAAQ,YAC7B,gBAACC,EAAA,EAAD,CAAcC,GAAIL,GAChB,gBAACM,EAAA,EAAD,CAAgBT,MAAOF,GACrB,gBAACY,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYL,QAAQ,KAAKM,UAAU,KAAKC,QAAQ,UAC7Cb,GAAgB,iBAElBE,GACC,gBAACS,EAAA,EAAD,CAAYL,QAAQ,QAAQQ,MAAM,gBAAgBF,UAAU,KACzD,IACAV,GAAQa,GAAAA,CAAOb,GAAMc,UAClBD,GAAAA,CAAOb,GAAMe,OAAO,cACpB,gBAGR,gBAACN,EAAA,EAAD,CAAYL,QAAQ,QAAQM,UAAU,IAAIM,cAAY,GACnDjB,GAEFF,GACC,gBAACY,EAAA,EAAD,CACEL,QAAQ,QACRQ,MAAM,iBACNT,GAAI,CAAEc,UAAW,WAEhBpB,Q,sBC5BXqB,EAAgBC,EAAAA,QAAAA,IAAAA,WAAH,gEAAGA,CAAH,sBAIbC,EAAQ,CACZ,CACEtB,MAAO,oBACPC,YAAa,0CACbE,KAAM,4BAER,CACEH,MAAO,oBACPC,YAAa,sCACbE,KAAM,4BAER,CACEH,MAAO,uBACPC,YAAa,qDACbE,KAAM,+BAER,CACEH,MAAO,eACPC,YACE,kHACFE,KAAM,sCAiFV,MA7EA,YAAoC,IAAZoB,EAAY,EAAZA,SAGtB,EAAwBC,EAAAA,SAAe,GAAhCC,EAAP,KAAaC,EAAb,KAgBA,OAdAF,EAAAA,WAAgB,WACd,IAAMG,EAAYC,EAAAA,MAASL,EAASM,OAAQ,CAC1CC,mBAAmB,IAClBL,KAEDE,IACCI,MAAMC,SAASL,EAAW,MAC3BA,EAAY,GACZA,GAAaM,KAAKC,KAAKZ,EAAMa,OAASC,EAAAA,IAEtCV,EAAQM,SAASL,EAAW,OAE7B,CAACJ,EAASM,OAAQP,EAAMa,SAGzB,gCACE,gBAACE,EAAA,EAAD,KACE,8DACA,wBAAMvC,KAAK,cAAcwC,QAAQ,mBAEnC,gBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,gBAAC7B,EAAA,EAAD,CAAYL,QAAQ,KAAKY,cAAY,GAArC,SAGA,gBAACP,EAAA,EAAD,CAAYL,QAAQ,QAAQY,cAAY,GAAxC,yFAIA,2BACGI,EAAMa,OAAS,EACd,gCACE,gBAACf,EAAD,MACGqB,EAAAA,EAAAA,GAAQnB,EAAOG,EAAMW,EAAAA,GAAYM,KAAI,SAACC,EAAGC,GACxC,IAAQ7C,EAAmC4C,EAAnC5C,KAAMC,EAA6B2C,EAA7B3C,MAAOC,EAAsB0C,EAAtB1C,YAAaE,EAASwC,EAATxC,KAClC,OACE,gBAAC,EAAD,CACE0C,IAAQD,EAAL,IAAU5C,EACbD,KAAMA,EACNC,MAAOA,EACPC,YAAaA,EACbE,KAAMA,QAKd,gBAAC2C,EAAA,EAAD,CACEC,KAAMtB,EACNuB,OAAQ,kBACNvB,EAAO,IACPwB,EAAAA,EAAAA,UAAY1B,EAAS2B,SAAb,SAA8BjB,KAAKkB,IAAI1B,EAAO,EAAG,KAE3D2B,OAAQ,WACN3B,EAAOQ,KAAKC,KAAKZ,EAAMa,OAASC,EAAAA,KAC9Ba,EAAAA,EAAAA,UACK1B,EAAS2B,SADN,SACuBjB,KAAKoB,IAChC5B,EAAO,EACPQ,KAAKC,KAAKZ,EAAMa,OAASC,EAAAA,KAG/BkB,QAAQC,IAAI9B,EAAO,EAAGQ,KAAKC,KAAKZ,EAAMa,OAASC,EAAAA,QAKrD,gBAACzB,EAAA,EAAD","sources":["webpack://dustbringer.github.io/./src/components/CardLarge.jsx","webpack://dustbringer.github.io/./src/pages/tools/index.jsx"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\n\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActionArea from \"@mui/material/CardActionArea\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nimport { LinkBare as InternalLink } from \"./InternalLink\";\r\n\r\nconst styles = {\r\n  root: {\r\n    textAlign: \"left\",\r\n    margin: \"10px\",\r\n    backgroundColor: \"#fafafa\",\r\n  },\r\n};\r\n\r\nfunction CardLarge({ name, type = \"\", title, description, date = \"\", path }) {\r\n  return (\r\n    <Card sx={styles.root} variant=\"outlined\">\r\n      <InternalLink to={path}>\r\n        <CardActionArea title={name}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h5\" display=\"inline\">\r\n              {title ? title : \"Unknown Title\"}\r\n            </Typography>\r\n            {date && (\r\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"i\">\r\n                {\" \"}\r\n                {date && moment(date).isValid()\r\n                  ? moment(date).format(\"YYYY-MM-DD\")\r\n                  : \"Unknown Date\"}\r\n              </Typography>\r\n            )}\r\n            <Typography variant=\"body2\" component=\"p\" gutterBottom>\r\n              {description}\r\n            </Typography>\r\n            {type && (\r\n              <Typography\r\n                variant=\"body2\"\r\n                color=\"text.secondary\"\r\n                sx={{ fontStyle: \"italic\" }}\r\n              >\r\n                {type}\r\n              </Typography>\r\n            )}\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </InternalLink>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardLarge;\r\n","import React from \"react\";\r\nimport { Link, navigate, graphql } from \"gatsby\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport styled from \"styled-components\";\r\nimport moment from \"moment\";\r\nimport qs from \"query-string\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport CardLarge from \"../../components/CardLarge\";\r\nimport PageNavigation from \"../../components/PageNavigation\";\r\n\r\nimport { N_PER_PAGE, getPage } from \"../../util/pagination\";\r\n\r\n// HELPFUL https://medium.com/@shawnstern/importing-multiple-markdown-files-into-a-react-component-with-webpack-7548559fce6f\r\n// In gatsby: https://www.gatsbyjs.com/blog/2017-07-19-creating-a-blog-with-gatsby/\r\n\r\nconst ListContainer = styled.div`\r\n  min-height: 75vh;\r\n`;\r\n\r\nconst tools = [\r\n  {\r\n    title: \"Markdown Renderer\",\r\n    description: \"Online renderer for Markdown and LaTeX.\",\r\n    path: \"/tools/markdown-renderer\",\r\n  },\r\n  {\r\n    title: \"Duplicate Remover\",\r\n    description: \"Remove duplicate items from a list.\",\r\n    path: \"/tools/duplicate-remover\",\r\n  },\r\n  {\r\n    title: \"Japanese File Reader\",\r\n    description: \"Render Japanese text file, with included furigana.\",\r\n    path: \"/tools/japanese-file-reader\",\r\n  },\r\n  {\r\n    title: \"Image Viewer\",\r\n    description:\r\n      \"View images from a JSON list of links. Written during Syncs Hack 2021 to help manually filter collected images.\",\r\n    path: \"/tools/syncshack2021-image-viewer\",\r\n  },\r\n];\r\n\r\nfunction ToolListPage({ location }) {\r\n  // const [tools, setTools] = React.useState([]);\r\n  // const [loading, setLoading] = React.useState(true);\r\n  const [page, setPage] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    const queryPage = qs.parse(location.search, {\r\n      ignoreQueryPrefix: true,\r\n    }).page;\r\n    if (\r\n      queryPage &&\r\n      !isNaN(parseInt(queryPage, 10)) &&\r\n      queryPage > 0 &&\r\n      queryPage <= Math.ceil(tools.length / N_PER_PAGE)\r\n    ) {\r\n      setPage(parseInt(queryPage, 10));\r\n    }\r\n  }, [location.search, tools.length]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Tools - dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"List of tools\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Tools\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          A bunch of online tools that I made and use myself, available for your\r\n          convenience...\r\n        </Typography>\r\n        <div>\r\n          {tools.length > 0 ? (\r\n            <>\r\n              <ListContainer>\r\n                {getPage(tools, page, N_PER_PAGE).map((t, i) => {\r\n                  const { type, title, description, path } = t;\r\n                  return (\r\n                    <CardLarge\r\n                      key={`${i}-${title}`}\r\n                      type={type}\r\n                      title={title}\r\n                      description={description}\r\n                      path={path}\r\n                    />\r\n                  );\r\n                })}\r\n              </ListContainer>\r\n              <PageNavigation\r\n                text={page}\r\n                onPrev={() =>\r\n                  page > 1 &&\r\n                  navigate(`${location.pathname}?page=${Math.max(page - 1, 1)}`)\r\n                }\r\n                onNext={() => {\r\n                  page < Math.ceil(tools.length / N_PER_PAGE) &&\r\n                    navigate(\r\n                      `${location.pathname}?page=${Math.min(\r\n                        page + 1,\r\n                        Math.ceil(tools.length / N_PER_PAGE)\r\n                      )}`\r\n                    );\r\n                  console.log(page + 1, Math.ceil(tools.length / N_PER_PAGE));\r\n                }}\r\n              />\r\n            </>\r\n          ) : (\r\n            <Typography>There seems to be nothing here...</Typography>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToolListPage;\r\n"],"names":["styles","root","textAlign","margin","backgroundColor","name","type","title","description","date","path","Card","sx","variant","InternalLink","to","CardActionArea","CardContent","Typography","component","display","color","moment","isValid","format","gutterBottom","fontStyle","ListContainer","styled","tools","location","React","page","setPage","queryPage","qs","search","ignoreQueryPrefix","isNaN","parseInt","Math","ceil","length","N_PER_PAGE","Helmet","content","Container","maxWidth","getPage","map","t","i","key","PageNavigation","text","onPrev","navigate","pathname","max","onNext","min","console","log"],"sourceRoot":""}