{"version":3,"file":"component---src-pages-tools-markdown-renderer-jsx-41a62aa5ebe3b30d4df8.js","mappings":"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","sources":["webpack://dustbringer.github.io/./src/components/Link.jsx","webpack://dustbringer.github.io/./src/pages/tools/markdown-renderer.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport MUILink from \"@mui/material/Link\";\r\n\r\nconst StyledMUILink = styled(MUILink)({\r\n  fontWeight: \"600\",\r\n  color: \"#2f3241\",\r\n  textDecoration: \"none\",\r\n  \"&:hover\": {\r\n    textDecoration: \"underline\",\r\n  },\r\n});\r\n\r\nfunction Link(props) {\r\n  return (\r\n    <StyledMUILink\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      {...props}\r\n    ></StyledMUILink>\r\n  );\r\n}\r\n\r\nexport default Link;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Slider from \"@mui/material/Slider\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport { DivMarginBottom } from \"../../components/styled/Divs\";\r\nimport Markdown, {\r\n  MarkdownNoContents,\r\n  MarkdownNoFormat,\r\n} from \"../../components/Markdown\";\r\nimport Link from \"../../components/Link\";\r\nimport Accordion from \"../../components/Accordion\";\r\nimport Code from \"../../components/Markdown/Code\";\r\nimport HorizontalRule from \"../../components/Markdown/HorizontalRule\";\r\nimport Table from \"../../components/Markdown/Table\";\r\nimport THead from \"../../components/Markdown/TableHead\";\r\nimport TBody from \"../../components/Markdown/TableBody\";\r\nimport TR from \"../../components/Markdown/TableRow\";\r\nimport TH from \"../../components/Markdown/TableHeaderCell\";\r\nimport TD from \"../../components/Markdown/TableDataCell\";\r\n\r\nimport katexMacros from \"../../components/Markdown/katexMacros\";\r\n\r\nconst RenderedText = styled(Typography)`\r\n  font-size: 1.4rem;\r\n`;\r\n\r\nfunction MarkdownRendererPage() {\r\n  const [text, _setText] = React.useState(\"\");\r\n  const [renderScale, setRenderScale] = React.useState(1.4);\r\n\r\n  const setText = (newText) => {\r\n    sessionStorage.setItem(\"markdownRendererText\", newText);\r\n    _setText(newText);\r\n  };\r\n\r\n  // Replace text with stored if it exists\r\n  React.useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      _setText(sessionStorage.getItem(\"markdownRendererText\") || \"\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Markdown Renderer | dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"Markdown Renderer\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Markdown Renderer\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Enter text into the box to render it in markdown. There is support for\r\n          bold, italics, headings, images, code, links, lists, tables and math.\r\n          Note for block math, put new lines between the delimiters and LaTeX.\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Similar tools:{\" \"}\r\n          <Link href=\"https://arachnoid.com/latex/\">arachnoid.com/latex</Link>{\" \"}\r\n          and{\" \"}\r\n          <Link href=\"https://editor.codecogs.com/\">editor.codecogs.com</Link>.\r\n        </Typography>\r\n\r\n        <DivMarginBottom>\r\n          <Accordion title=\"Details\">\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Write math using <Code inline>$ $</Code> for inline or{\" \"}\r\n              <Code inline>$$ $$</Code> for block display. Supported LaTeX\r\n              commands can be found on the{\" \"}\r\n              <Link href=\"https://katex.org/docs/supported.html\">\r\n                KaTeX website\r\n              </Link>\r\n              .\r\n            </Typography>\r\n            <Typography variant=\"body2\">Predefined macros:</Typography>\r\n            <Table>\r\n              <THead>\r\n                <TR>\r\n                  <TH>Macro</TH>\r\n                  <TH>Expansion</TH>\r\n                </TR>\r\n              </THead>\r\n              <TBody>\r\n                {Object.keys(katexMacros).map((k, i) => (\r\n                  <TR key={i}>\r\n                    <TD>\r\n                      <Code inline>{k}</Code>\r\n                    </TD>\r\n                    <TD>\r\n                      <Code inline>{katexMacros[k]}</Code>\r\n                    </TD>\r\n                  </TR>\r\n                ))}\r\n              </TBody>\r\n            </Table>\r\n            <Typography variant=\"body2\">\r\n              Note: <Code inline>#n</Code> corresponds to the nth argument\r\n              passed in by <Code inline>{\"\\\\command{arg1}{arg2}...\"}</Code>\r\n            </Typography>\r\n            <HorizontalRule />\r\n            Rendered font size (in <Code inline>rem</Code>)\r\n            <Slider\r\n              value={renderScale}\r\n              onChange={(e) => setRenderScale(e.target.value)}\r\n              step={0.1}\r\n              marks\r\n              min={0.5}\r\n              max={3.0}\r\n              valueLabelDisplay=\"auto\"\r\n            />\r\n          </Accordion>\r\n        </DivMarginBottom>\r\n\r\n        <TextField\r\n          label=\"Plain Text\"\r\n          rows={6}\r\n          multiline\r\n          margin=\"dense\"\r\n          size=\"small\"\r\n          fullWidth\r\n          autoFocus\r\n          variant=\"outlined\"\r\n          inputProps={{\r\n            style: {\r\n              fontFamily: \"Roboto Mono\",\r\n            },\r\n          }}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n\r\n        {/* Rendered Text */}\r\n        <Typography\r\n          variant=\"body1\"\r\n          component=\"div\"\r\n          sx={{ fontSize: `${renderScale}rem` }}\r\n        >\r\n          <MarkdownNoContents children={text} />\r\n          {/* <Markdown children={text} /> */}\r\n        </Typography>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MarkdownRendererPage;\r\n"],"names":["StyledMUILink","styled","MUILink","fontWeight","color","textDecoration","props","React","Object","assign","target","rel","Typography","_templateObject","_taggedTemplateLiteralLoose","_React$useState","text","_setText","_React$useState2","renderScale","setRenderScale","window","sessionStorage","getItem","Helmet","name","content","Container","maxWidth","variant","gutterBottom","Link","href","DivMarginBottom","Accordion","title","Code","inline","Table","THead","TR","TH","TBody","keys","katexMacros","map","k","i","key","TD","HorizontalRule","Slider","value","onChange","e","step","marks","min","max","valueLabelDisplay","TextField","label","rows","multiline","margin","size","fullWidth","autoFocus","inputProps","style","fontFamily","newText","setItem","component","sx","fontSize","MarkdownNoContents","children"],"sourceRoot":""}