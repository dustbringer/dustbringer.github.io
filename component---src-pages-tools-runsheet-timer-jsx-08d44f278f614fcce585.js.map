{"version":3,"file":"component---src-pages-tools-runsheet-timer-jsx-08d44f278f614fcce585.js","mappings":"wIAEIA,EAAyB,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBF,EAAuB,EAAQ,QAChDG,EAAc,EAAQ,OACtBC,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mPACD,iBACJN,EAAQ,EAAUG,C,+JCVdI,EAAY,CAAC,YAAa,a,eCE1BC,EDKW,WACb,IAAIC,EAAUC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,CAAC,EAC/EG,EAAeJ,EAAQI,aACzBC,EAAwBL,EAAQM,iBAChCA,OAA6C,IAA1BD,EAAmC,cAAgBA,EACtEE,EAAoBP,EAAQO,kBAC1BC,GAAU,QAAO,MAAO,CAC1BC,kBAAmB,SAA2BC,GAC5C,MAAgB,UAATA,GAA6B,OAATA,GAA0B,OAATA,CAC9C,GAHY,CAIXC,EAAA,GAeH,OAduB,cAAiB,SAAaC,EAASC,GAC5D,IAAIC,GAAQ,EAAAC,EAAA,GAASX,GACjBY,GAAgB,EAAAC,EAAA,GAAaL,GAC/BM,EAAYF,EAAcE,UAC1BC,EAAwBH,EAAcI,UACtCA,OAAsC,IAA1BD,EAAmC,MAAQA,EACvDE,GAAQ,OAA8BL,EAAelB,GACvD,OAAoB,SAAKU,GAAS,OAAS,CACzCc,GAAIF,EACJP,IAAKA,EACLK,WAAW,OAAKA,EAAWX,EAAoBA,EAAkBD,GAAoBA,GACrFQ,MAAOA,GACNO,GACL,GAEF,CC/BUE,CAAU,CAClBnB,cAFiB,E,SAAA,KAGjBE,iBAAkB,cAClBC,kBAAmBiB,EAAA,aAGrB,G,uRCJMC,GAASC,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kNAWtBC,GAAMH,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,2NACH,SAACG,GAAK,OAAKA,EAAMC,OAAS,SAAS,IAC9C,SAACD,GAAK,OAAKA,EAAME,MAAQ,CAAC,IAElB,SAACF,GAAK,OACrBA,EAAME,MAAQ,IAAM,OAAS,mBAAmB,IAO9CC,GAASR,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAkBU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,yEAM3BS,GAAcX,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAkBY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,uFAMnBF,EAAAA,EAAAA,IAAOS,EAAAA,EAAPT,CAAkBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,qFAkCrC,I,QAAA,EA3BA,SAAmBY,GAAkC,IAA/BC,EAAGD,EAAHC,IAAKC,EAAGF,EAAHE,IAAKC,EAAOH,EAAPG,QAASC,EAAOJ,EAAPI,QACjC9B,GAAQC,EAAAA,EAAAA,KACd0B,EAAMI,KAAKH,IAAID,EAAK,GAGpB,IAAMK,OACQ3C,KAHdwC,EAAUE,KAAKH,IAAIC,EAAS,UAGWxC,IAAZyC,EACrBH,EAAMC,EACJC,EACAC,EACFC,KAAKE,IAAIN,EAAKC,GAEdM,EAAWJ,GAAoBF,EAErC,OACEO,EAAAA,cAACxB,EAAM,CAACyB,MAAUJ,EAAQ,IAAIE,EAAQ,QACpCC,EAAAA,cAACpB,EAAG,CAACG,MAAOlB,EAAMqC,QAAQC,QAAQC,KAAMpB,KAAOQ,EAAMC,EAAO,KAC1DO,EAAAA,cAACf,EAAM,CAACoB,QAAQ,QAAQtB,MAAM,SAC3Bc,IAILG,EAAAA,cAACZ,EAAW,CAACiB,QAAQ,SAASN,GAGpC,ECvDMO,EAAW,SAACC,GAAC,OAAKA,EAAEC,QAAO,SAACC,EAAKC,GAAC,OAAKD,EAAMC,EAAEC,IAAI,GAAE,EAAG,EAOxDC,GAAiBnC,EAAAA,EAAAA,IAAO,MAAPA,CAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+EAM9BkC,GAAgBpC,EAAAA,EAAAA,IAAO,MAAPA,CAAaI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,6BAI7BmC,GAAoBrC,EAAAA,EAAAA,IAAO,MAAPA,CAAaU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+BAIjCoC,GAAetC,EAAAA,EAAAA,IAAOuC,EAAAA,EAAPvC,CAAcY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,4BAyRnC,MArRA,WACkBqB,EAAAA,WAAiBiB,EAAAA,GAAjC,IA2H0BC,EAIAC,EAGAC,EACAC,EAEAC,EAIAC,EAnI1BC,EAAkCxB,EAAAA,SAAe,MAA1CyB,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,EAA8B3B,EAAAA,SAAe4B,OAAtCC,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0B/B,EAAAA,SAAe,IAAlCgC,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAAgClC,EAAAA,SAAe,IAAxCmC,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAoD5B,OAhCAlC,EAAAA,WAAgB,WACd,IAAMqC,EAAQC,aAAY,kBAAMR,EAAWF,MAAS,GAAE,KACtD,OAAO,kBAAMW,cAAcF,EAAO,CACpC,GAAG,IAGHrC,EAAAA,WAAgB,WACd,IAAMwC,EAAaC,aAAaC,QAAQ,oCAClCC,EAAgBF,aAAaC,QACjC,uCAEIE,EAAiBH,aAAaC,QAClC,oCAEEF,GACFP,EAASY,KAAKC,MAAMN,IAElBI,GAAgBlB,EAAaE,IAAOgB,IACpCD,GAAeP,EAAYO,EACjC,GAAG,IAGH3C,EAAAA,WAAgB,WACVyB,GACFgB,aAAaM,QACX,mCACAtB,EAAUuB,UAGdC,QAAQC,IAAI,oBACd,GAAG,CAACzB,IAGFzB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACmD,EAAAA,EAAM,KACLnD,EAAAA,cAAA,aAAO,0CACPA,EAAAA,cAAA,QAAMoD,KAAK,cAAcC,QAAQ,oBAEnCrD,EAAAA,cAACsD,EAAAA,EAAS,CAACC,SAAS,MAClBvD,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,MAAK,kBACzBL,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,QAAQmD,cAAY,GAAC,6BAGxC/B,GACCzB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACY,EAAc,KACbZ,EAAAA,cAAClD,EAAAA,EAAG,CACF2G,GAAI,CACFC,QAAS,OACTC,cAAe,MACfC,eAAgB,kBAGlB5D,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,SAClBL,EAAAA,cAAA,cAAQ,WACPyB,EAAUuB,OAAO,iCAEpBhD,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,SAClBL,EAAAA,cAAA,cAAQ,SACP4B,IAAOH,GACLoC,IAAIvD,EAAS0B,GAAQ,KACrBgB,OAAO,kCAIdhD,EAAAA,cAAA,WACGgC,EAAM8B,KAAI,SAACpD,EAAGqD,GAAC,OACd/D,EAAAA,cAACa,EAAa,CAACmD,IAAKtD,EAAET,MAAQ8D,GAC3BrD,EAAET,MACHD,EAAAA,cAACiE,EAAU,CACTzE,IAAKqC,EAAQqC,KACXtC,IAAOH,GAAWoC,IAAIvD,EAAS0B,EAAMmC,MAAM,EAAGJ,IAAK,KACnD,WAEFtE,IAAc,GAATiB,EAAEC,KACPjB,QAASmC,EAAQqC,KACftC,IAAOH,GAAWoC,IAAIvD,EAAS0B,EAAMmC,MAAM,EAAGJ,IAAK,KACnD,WAEFpE,SApID/C,EAoIsB8D,EAAEC,KApIrByD,EAoI2B,EAnI7CA,GAAU,EAAUxE,KAAKyE,MAAMzH,GACvBgD,KAAKyE,MAAMzH,EAAIgD,KAAK0E,IAAI,GAAIF,IAAWxE,KAAK0E,IAAI,GAAIF,OAF9C,IAACxH,EAAGwH,CAsIU,MAKtBpE,EAAAA,cAAClD,EAAAA,EAAG,CAAC2G,GAAI,CAAEc,OAAQ,WACjBvE,EAAAA,cAACwE,EAAAA,EAAS,CAACvE,MAAM,WAAWwE,QAAM,GAChCzE,EAAAA,cAACc,EAAiB,KACf,IACDd,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,QAAQmD,cAAY,GACtCxD,EAAAA,cAAA,cAAQ,mBAGAkB,EAAUU,IAAOH,GAAWoC,IAChCvD,EAAS0B,GACT,KAEIb,EAAgBS,IAAAA,SACpBV,EAAQgD,KAAKzC,IAETL,EAAasD,SAASvD,EAAcwD,WACpCtD,EACJqD,SAASvD,EAAcyD,aAAe,GAClCtD,EACJoD,SAASvD,EAAc0D,aAAe,GAGlCtD,EAAcK,IAAAA,SAClBA,IAAAA,IAAWC,EAASX,GAASgD,KAAKzC,IAEnBiD,SAASnD,EAAYoD,WAGpB,KAFCD,SAASnD,EAAYqD,aAAe,GAEtB,KADdF,SAASnD,EAAYsD,aAAe,GACP,QAAQzD,EAAU,KAAKC,EAAY,KAAKC,EAAY,MAGxGtB,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,SAAQ,cAC5BL,EAAAA,cAAA,WACEA,EAAAA,cAAC8E,EAAAA,EAAM,CACL7E,MAAM,QACN8E,KAAK,QACLC,MAAOvD,EAAUwD,OACjBC,SAAU,SAACxE,GAAC,OACVgB,GAAa,SAACyD,GAAE,OACdA,EACIvD,IAAOuD,GAAIF,KAAKvE,EAAE0E,OAAOJ,OACzBpD,MAASqD,KAAKvE,EAAE0E,OAAOJ,MAAM,GAClC,EAEHK,UAAW,CAAE5B,GAAI,CAAE6B,OAAQ,YAE1BC,EAAAA,EAAAA,GAAIC,MAAM,KAAK1B,KAAI,SAAC2B,EAAG1B,GAAC,OACvB/D,EAAAA,cAAC0F,EAAAA,EAAQ,CAACV,MAAOjB,EAAGC,IAAKD,GACtBA,EAAI,GAAE,IAAOA,EAAMA,EACX,KAEL,IAAI,IACZ,IACF/D,EAAAA,cAAC8E,EAAAA,EAAM,CACL7E,MAAM,UACN8E,KAAK,QACLC,MAAOvD,EAAUkE,SACjBT,SAAU,SAACxE,GAAC,OACVgB,GAAa,SAACyD,GAAE,OACdA,EACIvD,IAAOuD,GAAIQ,OAAOjF,EAAE0E,OAAOJ,OAC3BpD,MAAS+D,OAAOjF,EAAE0E,OAAOJ,MAAM,GACpC,EAEHK,UAAW,CAAE5B,GAAI,CAAE6B,OAAQ,YAE1BC,EAAAA,EAAAA,GAAIC,MAAM,KAAK1B,KAAI,SAAC2B,EAAG1B,GAAC,OACvB/D,EAAAA,cAAC0F,EAAAA,EAAQ,CAACV,MAAOjB,EAAGC,IAAKD,GACtBA,EAAI,GAAE,IAAOA,EAAMA,EACX,KAEL,IAAI,IACZ,IACF/D,EAAAA,cAAC8E,EAAAA,EAAM,CACL7E,MAAM,UACN8E,KAAK,QACLC,MAAOvD,EAAUmE,SACjBV,SAAU,SAACxE,GAAC,OACVgB,GAAa,SAACyD,GAAE,OACdA,EACIvD,IAAOuD,GAAIS,OAAOlF,EAAE0E,OAAOJ,OAC3BpD,MAASgE,OAAOlF,EAAE0E,OAAOJ,MAAM,GACpC,EAEHK,UAAW,CAAE5B,GAAI,CAAE6B,OAAQ,UAC3B7B,GAAI,CAAEoC,YAAa,SAElBN,EAAAA,EAAAA,GAAIC,MAAM,KAAK1B,KAAI,SAAC2B,EAAG1B,GAAC,OACvB/D,EAAAA,cAAC0F,EAAAA,EAAQ,CAACV,MAAOjB,EAAGC,IAAKD,GACtBA,EAAI,GAAE,IAAOA,EAAMA,EACX,KAGf/D,EAAAA,cAACe,EAAY,CACXV,QAAQ,YACRyF,eAAa,EACb7F,MAAM,mBACN8F,QAAS,kBAAMrE,GAAa,SAACyD,GAAE,OAAKvD,KAAQ,GAAC,GAC9C,OAGD5B,EAAAA,cAACe,EAAY,CACXV,QAAQ,YACRyF,eAAa,EACb7F,MAAM,6BACN8F,QAAS,kBACPrE,GAAa,SAACyD,GAAE,OAAKvD,IAAOuD,GAAIa,SAAS,EAAG,IAAI,GAAC,GAEpD,SAGDhG,EAAAA,cAACe,EAAY,CACXV,QAAQ,YACRyF,eAAa,EACb7F,MAAM,4BACN8F,QAAS,kBACPrE,GAAa,SAACyD,GAAE,OAAKvD,IAAOuD,GAAItB,IAAI,EAAG,IAAI,GAAC,GAE/C,WAKL7D,EAAAA,cAACc,EAAiB,KAChBd,EAAAA,cAACd,EAAAA,EAAU,CAACmB,QAAQ,SAAQ,SAC5BL,EAAAA,cAACiG,EAAAA,EAAS,CACRC,WAAW,oDAEXjG,MAAM,oDACNkG,KAAM,GACNC,WAAS,EACT7B,OAAO,QACPQ,KAAK,QACLsB,WAAS,EACThG,QAAQ,WACRiG,WAAY,CACVC,MAAO,CACLC,WAAY,gBAGhBxB,MAAO7C,EACP+C,SAAU,SAACxE,GAAC,OAAK0B,EAAY1B,EAAE0E,OAAOJ,MAAM,IAE9ChF,EAAAA,cAACgB,EAAAA,EAAM,CACLX,QAAQ,YACRyF,eAAa,EACb7F,MAAM,MACN8F,QA3PC,SAACrF,GAClBA,EAAE+F,iBACF,IAAMC,EAAWvE,EACdwE,OACAC,MAAM,SACN9C,KAAI,SAACpD,GAAC,OAAKA,EAAEmG,MAAM,2BAA2B,IAC9CC,QAAO,SAACpG,GAAC,OAAKA,CAAC,IACfoD,KAAI,SAACpD,GAAC,MAAM,CAAET,MAAOS,EAAE,GAAGiG,OAAQhG,KAAMoG,WAAWrG,EAAE,IAAK,IAC7DuB,EAASyE,GAETjE,aAAaM,QACX,mCACAF,KAAKmE,UAAUN,IAEjBjE,aAAaM,QAAQ,sCAAuCZ,EAC9D,GA8OkBnC,EAAAA,cAACiH,EAAAA,EAAiB,YAUtC,C","sources":["webpack://dustbringer.github.io/./node_modules/@mui/icons-material/DirectionsRun.js","webpack://dustbringer.github.io/./node_modules/@mui/system/esm/createBox.js","webpack://dustbringer.github.io/./node_modules/@mui/material/Box/Box.js","webpack://dustbringer.github.io/./src/components/LoadingBar.jsx","webpack://dustbringer.github.io/./src/pages/tools/runsheet-timer.jsx"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9 1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"\n}), 'DirectionsRun');\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var defaultTheme = options.defaultTheme,\n    _options$defaultClass = options.defaultClassName,\n    defaultClassName = _options$defaultClass === void 0 ? 'MuiBox-root' : _options$defaultClass,\n    generateClassName = options.generateClassName;\n  var BoxRoot = styled('div', {\n    shouldForwardProp: function shouldForwardProp(prop) {\n      return prop !== 'theme' && prop !== 'sx' && prop !== 'as';\n    }\n  })(styleFunctionSx);\n  var Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    var theme = useTheme(defaultTheme);\n    var _extendSxProp = extendSxProp(inProps),\n      className = _extendSxProp.className,\n      _extendSxProp$compone = _extendSxProp.component,\n      component = _extendSxProp$compone === void 0 ? 'div' : _extendSxProp$compone,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: theme\n    }, other));\n  });\n  return Box;\n}","import { createBox } from '@mui/system';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nvar defaultTheme = createTheme();\nvar Box = createBox({\n  defaultTheme: defaultTheme,\n  defaultClassName: 'MuiBox-root',\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default Box;","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst Border = styled(\"div\")`\r\n  outline: 2.5px solid darkgrey;\r\n  border-radius: 100px;\r\n  height: 1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\nconst Bar = styled(\"div\")`\r\n  background-color: ${(props) => props.color || \"skyblue\"};\r\n  width: ${(props) => props.fill || 0}%;\r\n  height: 1rem;\r\n  border-radius: ${(props) =>\r\n    props.fill >= 100 ? \"10px\" : \"10px 4px 4px 10px\"};\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 1s linear;\r\n  overflow: hidden; // hides number inside when short\r\n`;\r\n\r\nconst Number = styled(Typography)`\r\n  font-weight: bold;\r\n  margin-left: auto;\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst NumberRight = styled(Typography)`\r\n  font-weight: bold;\r\n  position: absolute;\r\n  right: 4px;\r\n  z-index: -1;\r\n`;\r\nconst NumberLeft = styled(Typography)`\r\n  font-weight: bold;\r\n  position: absolute;\r\n  left: 4px;\r\n  z-index: -1;\r\n`;\r\n\r\nfunction LoadingBar({ cur, max, dispCur, dispMax }) {\r\n  const theme = useTheme();\r\n  cur = Math.max(cur, 0); // ignore negative cur\r\n  dispCur = Math.max(dispCur, 0);\r\n\r\n  const shownCur =\r\n    dispCur !== undefined && dispMax !== undefined\r\n      ? cur < max // show dispCur/dispMax depending on finer details in cur and max (seconds)\r\n        ? dispCur\r\n        : dispMax\r\n      : Math.min(cur, max);\r\n\r\n  const shownMax = dispMax ? dispMax : max;\r\n\r\n  return (\r\n    <Border title={`${shownCur}/${shownMax} min`}>\r\n      <Bar color={theme.palette.primary.main} fill={(cur / max) * 100}>\r\n        <Number variant=\"body2\" color=\"black\">\r\n          {shownCur}\r\n        </Number>\r\n      </Bar>\r\n\r\n      <NumberRight variant=\"body2\">{shownMax}</NumberRight>\r\n    </Border>\r\n  );\r\n}\r\n\r\nexport default LoadingBar;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport moment from \"moment\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport DirectionsRunIcon from \"@mui/icons-material/DirectionsRun\";\r\n\r\nimport Accordion from \"../../components/Accordion\";\r\nimport Container from \"../../components/Container\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport LoadingBar from \"../../components/LoadingBar\";\r\n\r\nconst sumTasks = (a) => a.reduce((acc, e) => acc + e.time, 0);\r\n\r\nconst trimDecimal = (d, places) => {\r\n  if (places <= 0) return Math.floor(d);\r\n  else return Math.floor(d * Math.pow(10, places)) / Math.pow(10, places);\r\n};\r\n\r\nconst TimerContainer = styled(\"div\")`\r\n  outline: 1px solid grey;\r\n  border-radius: 3px;\r\n  padding: 15px;\r\n`;\r\n\r\nconst TaskContainer = styled(\"div\")`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst SettingsContainer = styled(\"div\")`\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst ButtonSpaced = styled(Button)`\r\n  margin: 0 3px;\r\n`;\r\n\r\nfunction TimerPage() {\r\n  const context = React.useContext(GlobalContext);\r\n  // const { showError, showSuccess } = context || {\r\n  //   // Default values if context is null\r\n  //   showError: () => {},\r\n  //   showSuccess: () => {},\r\n  // };\r\n  const [startTime, setStartTime] = React.useState(null);\r\n  const [curTime, setCurTime] = React.useState(moment());\r\n  const [tasks, setTasks] = React.useState([]);\r\n  const [settings, setSettings] = React.useState(\"\");\r\n\r\n  const onSetTasks = (e) => {\r\n    e.preventDefault();\r\n    const newTasks = settings\r\n      .trim()\r\n      .split(/\\r?\\n/)\r\n      .map((e) => e.match(/^(\\d*\\.\\d+|\\d+\\.?),(.*)$/)) // get number,title\r\n      .filter((e) => e) // remove non-matches\r\n      .map((e) => ({ title: e[2].trim(), time: parseFloat(e[1]) })); // get number,title;\r\n    setTasks(newTasks);\r\n\r\n    localStorage.setItem(\r\n      \"dustbringer-runsheet-timer-tasks\",\r\n      JSON.stringify(newTasks)\r\n    );\r\n    localStorage.setItem(\"dustbringer-runsheet-timer-settings\", settings);\r\n  };\r\n\r\n  // Timer tick\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => setCurTime(moment()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Load any saved file contents\r\n  React.useEffect(() => {\r\n    const savedTasks = localStorage.getItem(\"dustbringer-runsheet-timer-tasks\");\r\n    const savedSettings = localStorage.getItem(\r\n      \"dustbringer-runsheet-timer-settings\"\r\n    );\r\n    const savedStartTime = localStorage.getItem(\r\n      \"dustbringer-runsheet-timer-start\"\r\n    );\r\n    if (savedTasks) {\r\n      setTasks(JSON.parse(savedTasks));\r\n    }\r\n    if (savedStartTime) setStartTime(moment(savedStartTime));\r\n    if (savedSettings) setSettings(savedSettings);\r\n  }, []);\r\n\r\n  // update starttime if changed\r\n  React.useEffect(() => {\r\n    if (startTime) {\r\n      localStorage.setItem(\r\n        \"dustbringer-runsheet-timer-start\",\r\n        startTime.format()\r\n      );\r\n    }\r\n    console.log(\"startTime changed\");\r\n  }, [startTime]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Runsheet Timer | dustbringer.github.io</title>\r\n        <meta name=\"description\" content=\"Runsheet Timer\" />\r\n      </Helmet>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\">Runsheet Timer</Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Keep track of a schedule.\r\n        </Typography>\r\n        {startTime && (\r\n          <>\r\n            <TimerContainer>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  flexDirection: \"row\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <Typography variant=\"body1\">\r\n                  <strong>Start: </strong>\r\n                  {startTime.format(\"HH:mm:ss, dddd, DD MMMM YYYY\")}\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  <strong>End: </strong>\r\n                  {moment(startTime)\r\n                    .add(sumTasks(tasks), \"m\")\r\n                    .format(\"HH:mm:ss, dddd, DD MMMM YYYY\")}\r\n                </Typography>\r\n              </Box>\r\n\r\n              <div>\r\n                {tasks.map((e, i) => (\r\n                  <TaskContainer key={e.title + i}>\r\n                    {e.title}\r\n                    <LoadingBar\r\n                      cur={curTime.diff(\r\n                        moment(startTime).add(sumTasks(tasks.slice(0, i)), \"m\"),\r\n                        \"seconds\"\r\n                      )}\r\n                      max={e.time * 60}\r\n                      dispCur={curTime.diff(\r\n                        moment(startTime).add(sumTasks(tasks.slice(0, i)), \"m\"),\r\n                        \"minutes\"\r\n                      )}\r\n                      dispMax={trimDecimal(e.time, 2)}\r\n                    />\r\n                  </TaskContainer>\r\n                ))}\r\n              </div>\r\n            </TimerContainer>\r\n\r\n            <Box sx={{ margin: \"10px 0\" }}>\r\n              <Accordion title=\"Settings\" expand>\r\n                <SettingsContainer>\r\n                  {\" \"}\r\n                  <Typography variant=\"body1\" gutterBottom>\r\n                    <strong>Time Elapsed: </strong>\r\n                    {(() => {\r\n                      // total time for the tasks listed\r\n                      const endTime = moment(startTime).add(\r\n                        sumTasks(tasks),\r\n                        \"m\"\r\n                      );\r\n                      const totalDuration = moment.duration(\r\n                        endTime.diff(startTime)\r\n                      );\r\n                      const totalHours = parseInt(totalDuration.asHours());\r\n                      const totalMinutes =\r\n                        parseInt(totalDuration.asMinutes()) % 60;\r\n                      const totalSeconds =\r\n                        parseInt(totalDuration.asSeconds()) % 60;\r\n\r\n                      // current should be at most the total time\r\n                      const curDuration = moment.duration(\r\n                        moment.min(curTime, endTime).diff(startTime)\r\n                      );\r\n                      const curHours = parseInt(curDuration.asHours());\r\n                      const curMinutes = parseInt(curDuration.asMinutes()) % 60;\r\n                      const curSeconds = parseInt(curDuration.asSeconds()) % 60;\r\n                      return `${curHours}h ${curMinutes}m ${curSeconds}s of ${totalHours}h ${totalMinutes}m ${totalSeconds}s`;\r\n                    })()}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">Start Time</Typography>\r\n                  <div>\r\n                    <Select\r\n                      title=\"Hours\"\r\n                      size=\"small\"\r\n                      value={startTime.hour()}\r\n                      onChange={(e) =>\r\n                        setStartTime((st) =>\r\n                          st\r\n                            ? moment(st).hour(e.target.value)\r\n                            : moment().hour(e.target.value)\r\n                        )\r\n                      }\r\n                      MenuProps={{ sx: { height: \"400px\" } }}\r\n                    >\r\n                      {[...Array(24)].map((_, i) => (\r\n                        <MenuItem value={i} key={i}>\r\n                          {i < 10 ? `0${i}` : i}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>{\" \"}\r\n                    :{\" \"}\r\n                    <Select\r\n                      title=\"Minutes\"\r\n                      size=\"small\"\r\n                      value={startTime.minute()}\r\n                      onChange={(e) =>\r\n                        setStartTime((st) =>\r\n                          st\r\n                            ? moment(st).minute(e.target.value)\r\n                            : moment().minute(e.target.value)\r\n                        )\r\n                      }\r\n                      MenuProps={{ sx: { height: \"400px\" } }}\r\n                    >\r\n                      {[...Array(60)].map((_, i) => (\r\n                        <MenuItem value={i} key={i}>\r\n                          {i < 10 ? `0${i}` : i}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>{\" \"}\r\n                    :{\" \"}\r\n                    <Select\r\n                      title=\"Seconds\"\r\n                      size=\"small\"\r\n                      value={startTime.second()}\r\n                      onChange={(e) =>\r\n                        setStartTime((st) =>\r\n                          st\r\n                            ? moment(st).second(e.target.value)\r\n                            : moment().second(e.target.value)\r\n                        )\r\n                      }\r\n                      MenuProps={{ sx: { height: \"400px\" } }}\r\n                      sx={{ marginRight: \"3px\" }}\r\n                    >\r\n                      {[...Array(60)].map((_, i) => (\r\n                        <MenuItem value={i} key={i}>\r\n                          {i < 10 ? `0${i}` : i}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                    <ButtonSpaced\r\n                      variant=\"contained\"\r\n                      disableRipple\r\n                      title=\"Set start to now\"\r\n                      onClick={() => setStartTime((st) => moment())}\r\n                    >\r\n                      Now\r\n                    </ButtonSpaced>\r\n                    <ButtonSpaced\r\n                      variant=\"contained\"\r\n                      disableRipple\r\n                      title=\"Set start backward one day\"\r\n                      onClick={() =>\r\n                        setStartTime((st) => moment(st).subtract(1, \"d\"))\r\n                      }\r\n                    >\r\n                      Day -\r\n                    </ButtonSpaced>\r\n                    <ButtonSpaced\r\n                      variant=\"contained\"\r\n                      disableRipple\r\n                      title=\"Set start forward one day\"\r\n                      onClick={() =>\r\n                        setStartTime((st) => moment(st).add(1, \"d\"))\r\n                      }\r\n                    >\r\n                      Day +\r\n                    </ButtonSpaced>\r\n                  </div>\r\n                </SettingsContainer>\r\n                <SettingsContainer>\r\n                  <Typography variant=\"body1\">Tasks</Typography>\r\n                  <TextField\r\n                    helperText=\"Format: [minutes],[title] separated by new lines.\"\r\n                    // placeholder=\"In the format [minutes],[title] and separated by new lines.\"\r\n                    title=\"Format: [minutes],[title] separated by new lines.\"\r\n                    rows={10}\r\n                    multiline\r\n                    margin=\"dense\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    inputProps={{\r\n                      style: {\r\n                        fontFamily: \"Roboto Mono\",\r\n                      },\r\n                    }}\r\n                    value={settings}\r\n                    onChange={(e) => setSettings(e.target.value)}\r\n                  />\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    disableRipple\r\n                    title=\"Set\"\r\n                    onClick={onSetTasks}\r\n                  >\r\n                    <DirectionsRunIcon />\r\n                  </Button>\r\n                </SettingsContainer>\r\n              </Accordion>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","_excluded","Box","options","arguments","length","undefined","defaultTheme","_options$defaultClass","defaultClassName","generateClassName","BoxRoot","shouldForwardProp","prop","styleFunctionSx","inProps","ref","theme","useTheme","_extendSxProp","extendSxProp","className","_extendSxProp$compone","component","other","as","createBox","ClassNameGenerator","Border","styled","_templateObject","_taggedTemplateLiteralLoose","Bar","_templateObject2","props","color","fill","Number","Typography","_templateObject3","NumberRight","_templateObject4","_templateObject5","_ref","cur","max","dispCur","dispMax","Math","shownCur","min","shownMax","React","title","palette","primary","main","variant","sumTasks","a","reduce","acc","e","time","TimerContainer","TaskContainer","SettingsContainer","ButtonSpaced","Button","GlobalContext","endTime","totalDuration","totalHours","totalMinutes","totalSeconds","curDuration","_React$useState","startTime","setStartTime","_React$useState2","moment","curTime","setCurTime","_React$useState3","tasks","setTasks","_React$useState4","settings","setSettings","timer","setInterval","clearInterval","savedTasks","localStorage","getItem","savedSettings","savedStartTime","JSON","parse","setItem","format","console","log","Helmet","name","content","Container","maxWidth","gutterBottom","sx","display","flexDirection","justifyContent","add","map","i","key","LoadingBar","diff","slice","places","floor","pow","margin","Accordion","expand","parseInt","asHours","asMinutes","asSeconds","Select","size","value","hour","onChange","st","target","MenuProps","height","_toConsumableArray","Array","_","MenuItem","minute","second","marginRight","disableRipple","onClick","subtract","TextField","helperText","rows","multiline","fullWidth","inputProps","style","fontFamily","preventDefault","newTasks","trim","split","match","filter","parseFloat","stringify","DirectionsRunIcon"],"sourceRoot":""}