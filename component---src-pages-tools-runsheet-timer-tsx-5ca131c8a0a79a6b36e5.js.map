{"version":3,"file":"component---src-pages-tools-runsheet-timer-tsx-5ca131c8a0a79a6b36e5.js","mappings":"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","sources":["webpack://dustbringer.github.io/./.yarn/__virtual__/@mui-icons-material-virtual-d4fb4b6438/4/AppData/Local/Yarn/Berry/cache/@mui-icons-material-npm-5.15.0-41db6753ba-10c0.zip/node_modules/@mui/icons-material/DirectionsRun.js","webpack://dustbringer.github.io/./.yarn/__virtual__/@mui-material-virtual-8a20c298cb/4/AppData/Local/Yarn/Berry/cache/@mui-material-npm-5.15.0-98499516ed-10c0.zip/node_modules/@mui/material/Box/boxClasses.js","webpack://dustbringer.github.io/./.yarn/__virtual__/@mui-material-virtual-8a20c298cb/4/AppData/Local/Yarn/Berry/cache/@mui-material-npm-5.15.0-98499516ed-10c0.zip/node_modules/@mui/material/Box/Box.js","webpack://dustbringer.github.io/./.yarn/__virtual__/@mui-system-virtual-551440d938/4/AppData/Local/Yarn/Berry/cache/@mui-system-npm-5.15.0-3267b6238b-10c0.zip/node_modules/@mui/system/esm/createBox.js","webpack://dustbringer.github.io/./src/components/LoadingBar.tsx","webpack://dustbringer.github.io/./src/components/LoadingBarThin.tsx","webpack://dustbringer.github.io/./src/pages/tools/runsheet-timer.tsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13.49 5.48c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm-3.6 13.9 1-4.4 2.1 2v6h2v-7.5l-2.1-2 .6-3c1.3 1.5 3.3 2.5 5.5 2.5v-2c-1.9 0-3.5-1-4.3-2.4l-1-1.6c-.4-.6-1-1-1.7-1-.3 0-.5.1-.8.1l-5.2 2.2v4.7h2v-3.4l1.8-.7-1.6 8.1-4.9-1-.4 2 7 1.4z\"\n}), 'DirectionsRun');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nconst boxClasses = generateUtilityClasses('MuiBox', ['root']);\nexport default boxClasses;","'use client';\n\nimport { createBox } from '@mui/system';\nimport PropTypes from 'prop-types';\nimport { unstable_ClassNameGenerator as ClassNameGenerator } from '../className';\nimport { createTheme } from '../styles';\nimport THEME_ID from '../styles/identifier';\nimport boxClasses from './boxClasses';\nconst defaultTheme = createTheme();\nconst Box = createBox({\n  themeId: THEME_ID,\n  defaultTheme,\n  defaultClassName: boxClasses.root,\n  generateClassName: ClassNameGenerator.generate\n});\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport styled from '@mui/styled-engine';\nimport styleFunctionSx, { extendSxProp } from './styleFunctionSx';\nimport useTheme from './useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function createBox(options = {}) {\n  const {\n    themeId,\n    defaultTheme,\n    defaultClassName = 'MuiBox-root',\n    generateClassName\n  } = options;\n  const BoxRoot = styled('div', {\n    shouldForwardProp: prop => prop !== 'theme' && prop !== 'sx' && prop !== 'as'\n  })(styleFunctionSx);\n  const Box = /*#__PURE__*/React.forwardRef(function Box(inProps, ref) {\n    const theme = useTheme(defaultTheme);\n    const _extendSxProp = extendSxProp(inProps),\n      {\n        className,\n        component = 'div'\n      } = _extendSxProp,\n      other = _objectWithoutPropertiesLoose(_extendSxProp, _excluded);\n    return /*#__PURE__*/_jsx(BoxRoot, _extends({\n      as: component,\n      ref: ref,\n      className: clsx(className, generateClassName ? generateClassName(defaultClassName) : defaultClassName),\n      theme: themeId ? theme[themeId] || theme : theme\n    }, other));\n  });\n  return Box;\n}","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst Border = styled(\"div\")`\r\n  outline: 2px solid ${(props) => props.color || \"darkgrey\"};\r\n  border-radius: 100px;\r\n  height: 1rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n`;\r\n\r\ntype BarProps = { fill: number };\r\nconst Bar = styled(\"div\")`\r\n  background-color: ${(props) => props.color || \"skyblue\"};\r\n  width: ${(props: BarProps) => props.fill || 0}%;\r\n  height: 1rem;\r\n  border-radius: ${(props: BarProps) =>\r\n    props.fill >= 100 ? \"10px\" : \"10px 4px 4px 10px\"};\r\n  display: flex;\r\n  align-items: center;\r\n  transition: all 1s linear;\r\n  overflow: hidden; // hides number inside when short\r\n`;\r\n\r\nconst Number = styled(Typography)`\r\n  font-weight: bold;\r\n  margin-left: auto;\r\n  padding: 0 4px;\r\n`;\r\n\r\nconst NumberRight = styled(Typography)`\r\n  font-weight: bold;\r\n  position: absolute;\r\n  right: 4px;\r\n  z-index: -1;\r\n`;\r\nconst NumberLeft = styled(Typography)`\r\n  font-weight: bold;\r\n  position: absolute;\r\n  left: 4px;\r\n  z-index: -1;\r\n`;\r\n\r\nfunction LoadingBar({\r\n  cur,\r\n  max,\r\n  dispCur,\r\n  dispMax,\r\n}: {\r\n  cur: number;\r\n  max: number;\r\n  dispCur: number;\r\n  dispMax: number;\r\n}) {\r\n  const theme = useTheme();\r\n  cur = Math.max(cur, 0); // ignore negative cur\r\n  dispCur = Math.max(dispCur, 0);\r\n\r\n  const shownCur =\r\n    dispCur !== undefined && dispMax !== undefined\r\n      ? cur < max // show dispCur/dispMax depending on finer details in cur and max (seconds)\r\n        ? dispCur\r\n        : dispMax\r\n      : Math.min(cur, max);\r\n\r\n  const shownMax = dispMax ? dispMax : max;\r\n\r\n  return (\r\n    <Border title={`${shownCur}/${shownMax} min`}>\r\n      <Bar color={theme.palette.primary.main} fill={(cur / max) * 100}>\r\n        <Number\r\n          variant=\"body2\"\r\n          color={theme.palette.mode === \"light\" ? \"#F4F4F4\" : \"black\"}\r\n        >\r\n          {shownCur}\r\n        </Number>\r\n      </Bar>\r\n\r\n      <NumberRight variant=\"body2\">{shownMax}</NumberRight>\r\n    </Border>\r\n  );\r\n}\r\n\r\nexport default LoadingBar;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst Background = styled(\"div\")`\r\n  position: relative;\r\n  background-color: ${(props) => props.color || \"#EEE\"};\r\n  height: 3px;\r\n  border-radius: 2px;\r\n  display: flex;\r\n  justify-content: start;\r\n  overflow: hidden;\r\n`;\r\n\r\ntype ForegroundProps = { fill: number };\r\nconst Foreground = styled(\"div\")`\r\n  background-color: ${(props) => props.color || \"skyblue\"};\r\n  width: ${(props: ForegroundProps) => Math.min(props.fill || 0, 100)}%;\r\n  height: 3px;\r\n  border-radius: 2px 0px 0px 2px;\r\n  transition: all 1s linear;\r\n`;\r\n\r\nconst Dot = styled(\"div\")`\r\n  background-color: ${(props) => props.color || \"white\"};\r\n  height: 3px;\r\n  width: 5px;\r\n`;\r\n\r\n/*\r\n  A thin horizontal loading bar. No text.\r\n */\r\nfunction LoadingBarThin({ cur, max }: { cur: number; max: number }) {\r\n  const theme = useTheme();\r\n  cur = Math.max(cur, 0); // ignore negative cur\r\n\r\n  return (\r\n    <Background color={theme.palette.mode === \"light\" ? \"darkgrey\" : \"grey\"}>\r\n      <Foreground color={theme.palette.primary.main} fill={(cur / max) * 100} />\r\n      <Dot />\r\n    </Background>\r\n  );\r\n}\r\n\r\nexport default LoadingBarThin;\r\n","import React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport moment from \"moment\";\r\nimport type { Moment } from \"moment\";\r\n\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport DirectionsRunIcon from \"@mui/icons-material/DirectionsRun\";\r\n\r\nimport Accordion from \"../../components/Accordion\";\r\nimport Container from \"../../components/Container\";\r\nimport { GlobalContext } from \"../../context/GlobalContext\";\r\nimport LoadingBar from \"../../components/LoadingBar\";\r\nimport LoadingBarThin from \"../../components/LoadingBarThin\";\r\n\r\ntype TaskType = {\r\n  title: string;\r\n  time: number;\r\n};\r\n\r\nconst sumTasks = <T extends { time: number }>(a: T[]) =>\r\n  a.reduce((acc, e) => acc + e.time, 0);\r\n\r\nconst trimDecimal = (d: number, places: number) => {\r\n  places = Math.floor(places);\r\n  if (places <= 0) return Math.floor(d);\r\n  else return Math.floor(d * Math.pow(10, places)) / Math.pow(10, places);\r\n};\r\n\r\nconst TimerContainer = styled(\"div\")`\r\n  outline: 1px solid grey;\r\n  border-radius: 3px;\r\n  padding: 15px;\r\n`;\r\n\r\nconst TaskContainer = styled(\"div\")`\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst SettingsContainer = styled(\"div\")`\r\n  margin: 0 0 10px;\r\n`;\r\n\r\nconst ButtonSpaced = styled(Button)`\r\n  margin: 3px 3px;\r\n`;\r\n\r\nfunction TimerPage() {\r\n  const context = React.useContext(GlobalContext);\r\n  const { showError, showSuccess } = context || {\r\n    // Default values if context is null\r\n    showError: () => {},\r\n    showSuccess: () => {},\r\n  };\r\n  const [startTime, setStartTime] = React.useState<Moment>();\r\n  const [curTime, setCurTime] = React.useState<Moment>(moment());\r\n  const [tasks, setTasks] = React.useState<TaskType[]>([]);\r\n  const [settings, setSettings] = React.useState(\"\");\r\n\r\n  const onSetTasks: React.MouseEventHandler<HTMLButtonElement> = (e) => {\r\n    e.preventDefault();\r\n    const matches = settings\r\n      .trim()\r\n      .split(/\\s*\\n\\s*/)\r\n      .map((e) => e.match(/^\\s*(\\d*\\.\\d+|\\d+\\.?)\\s*,(.*)$/)); // get number,title\r\n    // note: can say \\s because these are individual lines (no worry about new lines)\r\n\r\n    const newTasks = matches\r\n      .filter((e) => e) // remove non-matches\r\n      .map((e) => ({\r\n        title: e ? e[2].trim() : \"\",\r\n        time: parseFloat(e ? e[1] : \"0\"),\r\n      })); // get number,title;\r\n    setTasks(newTasks);\r\n\r\n    // Failed lines\r\n    const failedParse = matches\r\n      .map((_, i) => i)\r\n      .filter((i) => matches[i] === null);\r\n    if (failedParse.length > 0) {\r\n      showError(\r\n        `Error: Invalid time in lines ${failedParse\r\n          .map((i) => i + 1)\r\n          .join(\",\")}`\r\n      );\r\n    }\r\n\r\n    localStorage.setItem(\r\n      \"dustbringer-runsheet-timer-tasks\",\r\n      JSON.stringify(newTasks)\r\n    );\r\n    localStorage.setItem(\"dustbringer-runsheet-timer-settings\", settings);\r\n  };\r\n\r\n  // Timer tick\r\n  React.useEffect(() => {\r\n    const timer = setInterval(() => setCurTime(moment()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  // Load any saved file contents\r\n  React.useEffect(() => {\r\n    const savedTasks = localStorage.getItem(\"dustbringer-runsheet-timer-tasks\");\r\n    const savedSettings = localStorage.getItem(\r\n      \"dustbringer-runsheet-timer-settings\"\r\n    );\r\n    const savedStartTime = localStorage.getItem(\r\n      \"dustbringer-runsheet-timer-start\"\r\n    );\r\n    if (savedTasks) {\r\n      setTasks(JSON.parse(savedTasks));\r\n    }\r\n    if (savedStartTime) setStartTime(moment(savedStartTime));\r\n    else setStartTime(moment());\r\n\r\n    if (savedSettings) setSettings(savedSettings);\r\n  }, []);\r\n\r\n  // update starttime if changed\r\n  React.useEffect(() => {\r\n    if (startTime) {\r\n      localStorage.setItem(\r\n        \"dustbringer-runsheet-timer-start\",\r\n        startTime.format()\r\n      );\r\n    }\r\n  }, [startTime]);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"md\">\r\n        <Typography variant=\"h4\">Runsheet Timer</Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          Keep track of a schedule.\r\n        </Typography>\r\n        {startTime && (\r\n          <TimerContainer>\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                flexDirection: \"row\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Typography variant=\"body1\">\r\n                <strong>Start: </strong>\r\n                {startTime.format(\"HH:mm:ss, dddd, DD MMMM YYYY\")}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                <strong>End: </strong>\r\n                {moment(startTime)\r\n                  .add(sumTasks(tasks), \"m\")\r\n                  .format(\"HH:mm:ss, dddd, DD MMMM YYYY\")}\r\n              </Typography>\r\n            </Box>\r\n            <LoadingBarThin\r\n              cur={curTime.diff(moment(startTime), \"seconds\")}\r\n              max={sumTasks(tasks) * 60}\r\n            />\r\n\r\n            <div>\r\n              {tasks.map((e, i) => (\r\n                <TaskContainer key={e.title + i}>\r\n                  {e.title}\r\n                  <LoadingBar\r\n                    cur={curTime.diff(\r\n                      moment(startTime).add(sumTasks(tasks.slice(0, i)), \"m\"),\r\n                      \"seconds\"\r\n                    )}\r\n                    max={e.time * 60}\r\n                    dispCur={curTime.diff(\r\n                      moment(startTime).add(sumTasks(tasks.slice(0, i)), \"m\"),\r\n                      \"minutes\"\r\n                    )}\r\n                    dispMax={trimDecimal(e.time, 2)}\r\n                  />\r\n                </TaskContainer>\r\n              ))}\r\n            </div>\r\n          </TimerContainer>\r\n        )}\r\n\r\n        <Box sx={{ margin: \"10px 0\" }}>\r\n          <Accordion title=\"Settings\" expand>\r\n            <SettingsContainer>\r\n              {\" \"}\r\n              {startTime && (\r\n                <Typography variant=\"body1\" gutterBottom>\r\n                  <strong>Time Elapsed: </strong>\r\n                  {(() => {\r\n                    // total time for the tasks listed\r\n                    const endTime = moment(startTime).add(sumTasks(tasks), \"m\");\r\n                    const totalDuration = moment.duration(\r\n                      endTime.diff(startTime)\r\n                    );\r\n                    const totalHours = Math.floor(totalDuration.asHours());\r\n                    const totalMinutes =\r\n                      Math.floor(totalDuration.asMinutes()) % 60;\r\n                    const totalSeconds =\r\n                      Math.floor(totalDuration.asSeconds()) % 60;\r\n\r\n                    // current should be at most the total time\r\n                    const curDuration = moment.duration(\r\n                      moment.min(curTime, endTime).diff(startTime)\r\n                    );\r\n                    // use trunc instead of floor, so that negative time displays correctly\r\n                    const curHours = Math.trunc(curDuration.asHours());\r\n                    const curMinutes = Math.trunc(curDuration.asMinutes()) % 60;\r\n                    const curSeconds = Math.trunc(curDuration.asSeconds()) % 60;\r\n                    return `${curHours}h ${curMinutes}m ${curSeconds}s of ${totalHours}h ${totalMinutes}m ${totalSeconds}s`;\r\n                  })()}\r\n                </Typography>\r\n              )}\r\n              <Typography variant=\"body1\">Set Start Time</Typography>\r\n              <div>\r\n                <Select\r\n                  title=\"Hours\"\r\n                  size=\"small\"\r\n                  value={startTime ? startTime.hour() : 0}\r\n                  onChange={(e) =>\r\n                    setStartTime((st) =>\r\n                      st\r\n                        ? moment(st).hour(Number(e.target.value))\r\n                        : moment().hour(Number(e.target.value))\r\n                    )\r\n                  }\r\n                  MenuProps={{ sx: { height: \"400px\" } }}\r\n                >\r\n                  {[...Array(24)].map((_, i) => (\r\n                    <MenuItem value={i} key={i}>\r\n                      {i < 10 ? `0${i}` : i}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>{\" \"}\r\n                :{\" \"}\r\n                <Select\r\n                  title=\"Minutes\"\r\n                  size=\"small\"\r\n                  value={startTime ? startTime.minute() : 0}\r\n                  onChange={(e) =>\r\n                    setStartTime((st) =>\r\n                      st\r\n                        ? moment(st).minute(Number(e.target.value))\r\n                        : moment().minute(Number(e.target.value))\r\n                    )\r\n                  }\r\n                  MenuProps={{ sx: { height: \"400px\" } }}\r\n                >\r\n                  {[...Array(60)].map((_, i) => (\r\n                    <MenuItem value={i} key={i}>\r\n                      {i < 10 ? `0${i}` : i}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>{\" \"}\r\n                :{\" \"}\r\n                <Select\r\n                  title=\"Seconds\"\r\n                  size=\"small\"\r\n                  value={startTime ? startTime.second() : 0}\r\n                  onChange={(e) =>\r\n                    setStartTime((st) =>\r\n                      st\r\n                        ? moment(st).second(Number(e.target.value))\r\n                        : moment().second(Number(e.target.value))\r\n                    )\r\n                  }\r\n                  MenuProps={{ sx: { height: \"400px\" } }}\r\n                  sx={{ marginRight: \"3px\" }}\r\n                >\r\n                  {[...Array(60)].map((_, i) => (\r\n                    <MenuItem value={i} key={i}>\r\n                      {i < 10 ? `0${i}` : i}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n                <ButtonSpaced\r\n                  variant=\"contained\"\r\n                  disableRipple\r\n                  title=\"Set start to now\"\r\n                  onClick={() => setStartTime(moment())}\r\n                >\r\n                  Now\r\n                </ButtonSpaced>\r\n                <ButtonSpaced\r\n                  variant=\"contained\"\r\n                  disableRipple\r\n                  title=\"Set start backward one day\"\r\n                  onClick={() =>\r\n                    setStartTime((st) =>\r\n                      st\r\n                        ? moment(st).subtract(1, \"d\")\r\n                        : moment().subtract(1, \"d\")\r\n                    )\r\n                  }\r\n                >\r\n                  Day -\r\n                </ButtonSpaced>\r\n                <ButtonSpaced\r\n                  variant=\"contained\"\r\n                  disableRipple\r\n                  title=\"Set start forward one day\"\r\n                  onClick={() =>\r\n                    setStartTime((st) =>\r\n                      st ? moment(st).add(1, \"d\") : moment().add(1, \"d\")\r\n                    )\r\n                  }\r\n                >\r\n                  Day +\r\n                </ButtonSpaced>\r\n              </div>\r\n            </SettingsContainer>\r\n            <SettingsContainer>\r\n              <Typography variant=\"body1\">Tasks</Typography>\r\n              <TextField\r\n                helperText=\"Format: [minutes],[title] separated by new lines.\"\r\n                // placeholder=\"In the format [minutes],[title] and separated by new lines.\"\r\n                title=\"Format: [minutes],[title] separated by new lines.\"\r\n                rows={10}\r\n                multiline\r\n                margin=\"dense\"\r\n                size=\"small\"\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                inputProps={{\r\n                  style: {\r\n                    fontFamily: \"Roboto Mono\",\r\n                  },\r\n                }}\r\n                value={settings}\r\n                onChange={(e) => setSettings(e.target.value)}\r\n              />\r\n              <Button\r\n                variant=\"contained\"\r\n                disableRipple\r\n                title=\"Set\"\r\n                onClick={onSetTasks}\r\n              >\r\n                <DirectionsRunIcon />\r\n              </Button>\r\n            </SettingsContainer>\r\n          </Accordion>\r\n        </Box>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TimerPage;\r\n\r\nexport function Head() {\r\n  return (\r\n    <>\r\n      <title>Runsheet Timer | dustbringer.github.io</title>\r\n      <meta name=\"description\" content=\"Runsheet Timer\" />\r\n    </>\r\n  );\r\n}\r\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","defaultTheme","createTheme","createBox","themeId","defaultClassName","root","generateClassName","ClassNameGenerator","generate","_excluded","options","BoxRoot","shouldForwardProp","prop","inProps","ref","theme","_extendSxProp","className","component","other","as","Border","styled","_templateObject","_taggedTemplateLiteralLoose","props","color","Bar","_templateObject2","fill","Number","Typography","_templateObject3","NumberRight","_templateObject4","_templateObject5","_ref","cur","max","dispCur","dispMax","useTheme","Math","shownCur","undefined","min","shownMax","React","title","palette","primary","main","variant","mode","Background","Foreground","Dot","sumTasks","a","reduce","acc","e","time","TimerContainer","TaskContainer","SettingsContainer","ButtonSpaced","Button","context","GlobalContext","showError","showSuccess","startTime","setStartTime","curTime","setCurTime","moment","tasks","setTasks","settings","setSettings","timer","setInterval","clearInterval","savedTasks","localStorage","getItem","savedSettings","savedStartTime","JSON","parse","setItem","format","Container","maxWidth","gutterBottom","Box","sx","display","flexDirection","justifyContent","add","LoadingBarThin","diff","map","i","key","LoadingBar","slice","places","floor","pow","trimDecimal","margin","Accordion","expand","endTime","totalDuration","totalHours","asHours","totalMinutes","asMinutes","totalSeconds","asSeconds","curDuration","trunc","Select","size","value","hour","onChange","st","target","MenuProps","height","_toConsumableArray","Array","_","MenuItem","minute","second","marginRight","disableRipple","onClick","subtract","TextField","helperText","rows","multiline","fullWidth","inputProps","style","fontFamily","preventDefault","matches","trim","split","match","newTasks","filter","parseFloat","failedParse","length","join","stringify","DirectionsRunIcon","Head","name","content"],"sourceRoot":""}